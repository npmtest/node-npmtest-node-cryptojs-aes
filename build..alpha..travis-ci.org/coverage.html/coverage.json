{"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_node_cryptojs_aes */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/lib.npmtest_node_cryptojs_aes.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/lib.npmtest_node_cryptojs_aes.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_node_cryptojs_aes */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_node_cryptojs_aes = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_node_cryptojs_aes = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":75},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-node-cryptojs-aes && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_node_cryptojs_aes */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_node_cryptojs_aes","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_node_cryptojs_aes.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_node_cryptojs_aes.rollup.js'] =","            local.assetsDict['/assets.npmtest_node_cryptojs_aes.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_node_cryptojs_aes.__dirname + '/lib.npmtest_node_cryptojs_aes.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/cryptojs.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/cryptojs.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":65}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}}},"branchMap":{},"code":["var CryptoJS = require('./lib/core').CryptoJS;","require('./lib/enc-base64');","require('./lib/md5');","require('./lib/evpkdf');","require('./lib/cipher-core');","require('./lib/aes');","var JsonFormatter = require('./lib/jsonformatter').JsonFormatter;","","exports.CryptoJS = CryptoJS;","exports.JsonFormatter = JsonFormatter;"],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/core.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":22,"8":22,"9":22,"10":19,"11":22,"12":16,"13":0,"14":22,"15":22,"16":22,"17":0,"18":0,"19":0,"20":19,"21":71,"22":71,"23":19,"24":2,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":1,"133":0,"134":1,"135":1,"136":1},"b":{"1":[1,1],"2":[19,3],"3":[16,6],"4":[71,0],"5":[2,17],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":1,"3":22,"4":22,"5":0,"6":0,"7":0,"8":19,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":28},"end":{"line":10,"column":55}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":29},"end":{"line":24,"column":41}}},"3":{"name":"F","line":25,"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":41}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":35},"end":{"line":58,"column":47}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":20},"end":{"line":84,"column":32}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":18},"end":{"line":103,"column":30}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":19},"end":{"line":117,"column":41}}},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":19},"end":{"line":139,"column":31}}},"10":{"name":"(anonymous_10)","line":164,"loc":{"start":{"line":164,"column":14},"end":{"line":164,"column":41}}},"11":{"name":"(anonymous_11)","line":187,"loc":{"start":{"line":187,"column":18},"end":{"line":187,"column":37}}},"12":{"name":"(anonymous_12)","line":202,"loc":{"start":{"line":202,"column":16},"end":{"line":202,"column":37}}},"13":{"name":"(anonymous_13)","line":241,"loc":{"start":{"line":241,"column":15},"end":{"line":241,"column":27}}},"14":{"name":"(anonymous_14)","line":260,"loc":{"start":{"line":260,"column":15},"end":{"line":260,"column":27}}},"15":{"name":"(anonymous_15)","line":280,"loc":{"start":{"line":280,"column":16},"end":{"line":280,"column":34}}},"16":{"name":"(anonymous_16)","line":312,"loc":{"start":{"line":312,"column":19},"end":{"line":312,"column":40}}},"17":{"name":"(anonymous_17)","line":341,"loc":{"start":{"line":341,"column":15},"end":{"line":341,"column":33}}},"18":{"name":"(anonymous_18)","line":372,"loc":{"start":{"line":372,"column":19},"end":{"line":372,"column":40}}},"19":{"name":"(anonymous_19)","line":400,"loc":{"start":{"line":400,"column":15},"end":{"line":400,"column":36}}},"20":{"name":"(anonymous_20)","line":431,"loc":{"start":{"line":431,"column":19},"end":{"line":431,"column":40}}},"21":{"name":"(anonymous_21)","line":452,"loc":{"start":{"line":452,"column":15},"end":{"line":452,"column":34}}},"22":{"name":"(anonymous_22)","line":472,"loc":{"start":{"line":472,"column":15},"end":{"line":472,"column":27}}},"23":{"name":"(anonymous_23)","line":488,"loc":{"start":{"line":488,"column":17},"end":{"line":488,"column":33}}},"24":{"name":"(anonymous_24)","line":513,"loc":{"start":{"line":513,"column":18},"end":{"line":513,"column":37}}},"25":{"name":"(anonymous_25)","line":563,"loc":{"start":{"line":563,"column":15},"end":{"line":563,"column":27}}},"26":{"name":"(anonymous_26)","line":593,"loc":{"start":{"line":593,"column":14},"end":{"line":593,"column":29}}},"27":{"name":"(anonymous_27)","line":608,"loc":{"start":{"line":608,"column":15},"end":{"line":608,"column":27}}},"28":{"name":"(anonymous_28)","line":628,"loc":{"start":{"line":628,"column":16},"end":{"line":628,"column":41}}},"29":{"name":"(anonymous_29)","line":653,"loc":{"start":{"line":653,"column":18},"end":{"line":653,"column":43}}},"30":{"name":"(anonymous_30)","line":680,"loc":{"start":{"line":680,"column":23},"end":{"line":680,"column":41}}},"31":{"name":"(anonymous_31)","line":681,"loc":{"start":{"line":681,"column":19},"end":{"line":681,"column":43}}},"32":{"name":"(anonymous_32)","line":699,"loc":{"start":{"line":699,"column":27},"end":{"line":699,"column":45}}},"33":{"name":"(anonymous_33)","line":700,"loc":{"start":{"line":700,"column":19},"end":{"line":700,"column":43}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":712,"column":9}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"4":{"start":{"line":24,"column":4},"end":{"line":143,"column":9}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"6":{"start":{"line":27,"column":8},"end":{"line":142,"column":10}},"7":{"start":{"line":48,"column":16},"end":{"line":48,"column":35}},"8":{"start":{"line":49,"column":16},"end":{"line":49,"column":38}},"9":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"10":{"start":{"line":53,"column":20},"end":{"line":53,"column":45}},"11":{"start":{"line":57,"column":16},"end":{"line":61,"column":17}},"12":{"start":{"line":58,"column":20},"end":{"line":60,"column":22}},"13":{"start":{"line":59,"column":24},"end":{"line":59,"column":67}},"14":{"start":{"line":64,"column":16},"end":{"line":64,"column":49}},"15":{"start":{"line":67,"column":16},"end":{"line":67,"column":38}},"16":{"start":{"line":69,"column":16},"end":{"line":69,"column":31}},"17":{"start":{"line":85,"column":16},"end":{"line":85,"column":45}},"18":{"start":{"line":86,"column":16},"end":{"line":86,"column":57}},"19":{"start":{"line":88,"column":16},"end":{"line":88,"column":32}},"20":{"start":{"line":118,"column":16},"end":{"line":122,"column":17}},"21":{"start":{"line":119,"column":20},"end":{"line":121,"column":21}},"22":{"start":{"line":120,"column":24},"end":{"line":120,"column":70}},"23":{"start":{"line":125,"column":16},"end":{"line":127,"column":17}},"24":{"start":{"line":126,"column":20},"end":{"line":126,"column":56}},"25":{"start":{"line":140,"column":16},"end":{"line":140,"column":56}},"26":{"start":{"line":151,"column":4},"end":{"line":288,"column":7}},"27":{"start":{"line":165,"column":12},"end":{"line":165,"column":45}},"28":{"start":{"line":167,"column":12},"end":{"line":171,"column":13}},"29":{"start":{"line":168,"column":16},"end":{"line":168,"column":41}},"30":{"start":{"line":170,"column":16},"end":{"line":170,"column":49}},"31":{"start":{"line":188,"column":12},"end":{"line":188,"column":52}},"32":{"start":{"line":204,"column":12},"end":{"line":204,"column":39}},"33":{"start":{"line":205,"column":12},"end":{"line":205,"column":44}},"34":{"start":{"line":206,"column":12},"end":{"line":206,"column":45}},"35":{"start":{"line":207,"column":12},"end":{"line":207,"column":50}},"36":{"start":{"line":210,"column":12},"end":{"line":210,"column":25}},"37":{"start":{"line":213,"column":12},"end":{"line":227,"column":13}},"38":{"start":{"line":215,"column":16},"end":{"line":218,"column":17}},"39":{"start":{"line":216,"column":20},"end":{"line":216,"column":86}},"40":{"start":{"line":217,"column":20},"end":{"line":217,"column":107}},"41":{"start":{"line":219,"column":19},"end":{"line":227,"column":13}},"42":{"start":{"line":221,"column":16},"end":{"line":223,"column":17}},"43":{"start":{"line":222,"column":20},"end":{"line":222,"column":77}},"44":{"start":{"line":226,"column":16},"end":{"line":226,"column":59}},"45":{"start":{"line":228,"column":12},"end":{"line":228,"column":42}},"46":{"start":{"line":231,"column":12},"end":{"line":231,"column":24}},"47":{"start":{"line":243,"column":12},"end":{"line":243,"column":35}},"48":{"start":{"line":244,"column":12},"end":{"line":244,"column":41}},"49":{"start":{"line":247,"column":12},"end":{"line":247,"column":77}},"50":{"start":{"line":248,"column":12},"end":{"line":248,"column":51}},"51":{"start":{"line":261,"column":12},"end":{"line":261,"column":46}},"52":{"start":{"line":262,"column":12},"end":{"line":262,"column":46}},"53":{"start":{"line":264,"column":12},"end":{"line":264,"column":25}},"54":{"start":{"line":281,"column":12},"end":{"line":281,"column":27}},"55":{"start":{"line":282,"column":12},"end":{"line":284,"column":13}},"56":{"start":{"line":283,"column":16},"end":{"line":283,"column":62}},"57":{"start":{"line":286,"column":12},"end":{"line":286,"column":53}},"58":{"start":{"line":293,"column":4},"end":{"line":293,"column":27}},"59":{"start":{"line":298,"column":4},"end":{"line":353,"column":6}},"60":{"start":{"line":314,"column":12},"end":{"line":314,"column":40}},"61":{"start":{"line":315,"column":12},"end":{"line":315,"column":46}},"62":{"start":{"line":318,"column":12},"end":{"line":318,"column":30}},"63":{"start":{"line":319,"column":12},"end":{"line":323,"column":13}},"64":{"start":{"line":320,"column":16},"end":{"line":320,"column":74}},"65":{"start":{"line":321,"column":16},"end":{"line":321,"column":57}},"66":{"start":{"line":322,"column":16},"end":{"line":322,"column":58}},"67":{"start":{"line":325,"column":12},"end":{"line":325,"column":37}},"68":{"start":{"line":343,"column":12},"end":{"line":343,"column":45}},"69":{"start":{"line":346,"column":12},"end":{"line":346,"column":27}},"70":{"start":{"line":347,"column":12},"end":{"line":349,"column":13}},"71":{"start":{"line":348,"column":16},"end":{"line":348,"column":90}},"72":{"start":{"line":351,"column":12},"end":{"line":351,"column":63}},"73":{"start":{"line":358,"column":4},"end":{"line":412,"column":6}},"74":{"start":{"line":374,"column":12},"end":{"line":374,"column":40}},"75":{"start":{"line":375,"column":12},"end":{"line":375,"column":46}},"76":{"start":{"line":378,"column":12},"end":{"line":378,"column":33}},"77":{"start":{"line":379,"column":12},"end":{"line":382,"column":13}},"78":{"start":{"line":380,"column":16},"end":{"line":380,"column":74}},"79":{"start":{"line":381,"column":16},"end":{"line":381,"column":60}},"80":{"start":{"line":384,"column":12},"end":{"line":384,"column":40}},"81":{"start":{"line":402,"column":12},"end":{"line":402,"column":51}},"82":{"start":{"line":405,"column":12},"end":{"line":405,"column":27}},"83":{"start":{"line":406,"column":12},"end":{"line":408,"column":13}},"84":{"start":{"line":407,"column":16},"end":{"line":407,"column":89}},"85":{"start":{"line":410,"column":12},"end":{"line":410,"column":62}},"86":{"start":{"line":417,"column":4},"end":{"line":455,"column":6}},"87":{"start":{"line":432,"column":12},"end":{"line":436,"column":13}},"88":{"start":{"line":433,"column":16},"end":{"line":433,"column":79}},"89":{"start":{"line":435,"column":16},"end":{"line":435,"column":56}},"90":{"start":{"line":453,"column":12},"end":{"line":453,"column":71}},"91":{"start":{"line":464,"column":4},"end":{"line":571,"column":7}},"92":{"start":{"line":474,"column":12},"end":{"line":474,"column":46}},"93":{"start":{"line":475,"column":12},"end":{"line":475,"column":33}},"94":{"start":{"line":490,"column":12},"end":{"line":492,"column":13}},"95":{"start":{"line":491,"column":16},"end":{"line":491,"column":40}},"96":{"start":{"line":495,"column":12},"end":{"line":495,"column":36}},"97":{"start":{"line":496,"column":12},"end":{"line":496,"column":46}},"98":{"start":{"line":515,"column":12},"end":{"line":515,"column":34}},"99":{"start":{"line":516,"column":12},"end":{"line":516,"column":39}},"100":{"start":{"line":517,"column":12},"end":{"line":517,"column":45}},"101":{"start":{"line":518,"column":12},"end":{"line":518,"column":43}},"102":{"start":{"line":519,"column":12},"end":{"line":519,"column":47}},"103":{"start":{"line":522,"column":12},"end":{"line":522,"column":61}},"104":{"start":{"line":523,"column":12},"end":{"line":530,"column":13}},"105":{"start":{"line":525,"column":16},"end":{"line":525,"column":55}},"106":{"start":{"line":529,"column":16},"end":{"line":529,"column":85}},"107":{"start":{"line":533,"column":12},"end":{"line":533,"column":55}},"108":{"start":{"line":536,"column":12},"end":{"line":536,"column":70}},"109":{"start":{"line":539,"column":12},"end":{"line":548,"column":13}},"110":{"start":{"line":540,"column":16},"end":{"line":543,"column":17}},"111":{"start":{"line":542,"column":20},"end":{"line":542,"column":60}},"112":{"start":{"line":546,"column":16},"end":{"line":546,"column":70}},"113":{"start":{"line":547,"column":16},"end":{"line":547,"column":45}},"114":{"start":{"line":551,"column":12},"end":{"line":551,"column":67}},"115":{"start":{"line":564,"column":12},"end":{"line":564,"column":46}},"116":{"start":{"line":565,"column":12},"end":{"line":565,"column":45}},"117":{"start":{"line":567,"column":12},"end":{"line":567,"column":25}},"118":{"start":{"line":578,"column":4},"end":{"line":704,"column":7}},"119":{"start":{"line":595,"column":12},"end":{"line":595,"column":44}},"120":{"start":{"line":598,"column":12},"end":{"line":598,"column":25}},"121":{"start":{"line":610,"column":12},"end":{"line":610,"column":52}},"122":{"start":{"line":613,"column":12},"end":{"line":613,"column":28}},"123":{"start":{"line":630,"column":12},"end":{"line":630,"column":40}},"124":{"start":{"line":633,"column":12},"end":{"line":633,"column":28}},"125":{"start":{"line":636,"column":12},"end":{"line":636,"column":24}},"126":{"start":{"line":655,"column":12},"end":{"line":657,"column":13}},"127":{"start":{"line":656,"column":16},"end":{"line":656,"column":44}},"128":{"start":{"line":660,"column":12},"end":{"line":660,"column":42}},"129":{"start":{"line":662,"column":12},"end":{"line":662,"column":24}},"130":{"start":{"line":681,"column":12},"end":{"line":683,"column":14}},"131":{"start":{"line":682,"column":16},"end":{"line":682,"column":62}},"132":{"start":{"line":700,"column":12},"end":{"line":702,"column":14}},"133":{"start":{"line":701,"column":16},"end":{"line":701,"column":75}},"134":{"start":{"line":709,"column":4},"end":{"line":709,"column":29}},"135":{"start":{"line":711,"column":4},"end":{"line":711,"column":13}},"136":{"start":{"line":714,"column":0},"end":{"line":714,"column":28}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":15},"end":{"line":10,"column":23}},{"start":{"line":10,"column":28},"end":{"line":712,"column":7}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":16}},{"start":{"line":52,"column":16},"end":{"line":52,"column":16}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":16}},{"start":{"line":57,"column":16},"end":{"line":57,"column":16}}]},"4":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":20},"end":{"line":119,"column":20}},{"start":{"line":119,"column":20},"end":{"line":119,"column":20}}]},"5":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":16}},{"start":{"line":125,"column":16},"end":{"line":125,"column":16}}]},"6":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":33},"end":{"line":165,"column":38}},{"start":{"line":165,"column":42},"end":{"line":165,"column":44}}]},"7":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"8":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":20},"end":{"line":188,"column":27}},{"start":{"line":188,"column":31},"end":{"line":188,"column":34}}]},"9":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":12},"end":{"line":213,"column":12}},{"start":{"line":213,"column":12},"end":{"line":213,"column":12}}]},"10":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":19},"end":{"line":219,"column":19}},{"start":{"line":219,"column":19},"end":{"line":219,"column":19}}]},"11":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":12},"end":{"line":490,"column":12}},{"start":{"line":490,"column":12},"end":{"line":490,"column":12}}]},"12":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":12},"end":{"line":523,"column":12}},{"start":{"line":523,"column":12},"end":{"line":523,"column":12}}]},"13":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":12},"end":{"line":539,"column":12}},{"start":{"line":539,"column":12},"end":{"line":539,"column":12}}]},"14":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":12},"end":{"line":655,"column":12}},{"start":{"line":655,"column":12},"end":{"line":655,"column":12}}]}},"code":["/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","/**"," * CryptoJS core components."," */","var CryptoJS = CryptoJS || (function (Math, undefined) {","    /**","     * CryptoJS namespace.","     */","    var C = {};","","    /**","     * Library namespace.","     */","    var C_lib = C.lib = {};","","    /**","     * Base object for prototypal inheritance.","     */","    var Base = C_lib.Base = (function () {","        function F() {}","","        return {","            /**","             * Creates a new object that inherits from this object.","             *","             * @param {Object} overrides Properties to copy into the new object.","             *","             * @return {Object} The new object.","             *","             * @static","             *","             * @example","             *","             *     var MyType = CryptoJS.lib.Base.extend({","             *         field: 'value',","             *","             *         method: function () {","             *         }","             *     });","             */","            extend: function (overrides) {","                // Spawn","                F.prototype = this;","                var subtype = new F();","","                // Augment","                if (overrides) {","                    subtype.mixIn(overrides);","                }","","                // Create default initializer","                if (!subtype.hasOwnProperty('init')) {","                    subtype.init = function () {","                        subtype.$super.init.apply(this, arguments);","                    };","                }","","                // Initializer's prototype is the subtype object","                subtype.init.prototype = subtype;","","                // Reference supertype","                subtype.$super = this;","","                return subtype;","            },","","            /**","             * Extends this object and runs the init method.","             * Arguments to create() will be passed to init().","             *","             * @return {Object} The new object.","             *","             * @static","             *","             * @example","             *","             *     var instance = MyType.create();","             */","            create: function () {","                var instance = this.extend();","                instance.init.apply(instance, arguments);","","                return instance;","            },","","            /**","             * Initializes a newly created object.","             * Override this method to add some logic when your objects are created.","             *","             * @example","             *","             *     var MyType = CryptoJS.lib.Base.extend({","             *         init: function () {","             *             // ...","             *         }","             *     });","             */","            init: function () {","            },","","            /**","             * Copies properties into this object.","             *","             * @param {Object} properties The properties to mix in.","             *","             * @example","             *","             *     MyType.mixIn({","             *         field: 'value'","             *     });","             */","            mixIn: function (properties) {","                for (var propertyName in properties) {","                    if (properties.hasOwnProperty(propertyName)) {","                        this[propertyName] = properties[propertyName];","                    }","                }","","                // IE won't copy toString using the loop above","                if (properties.hasOwnProperty('toString')) {","                    this.toString = properties.toString;","                }","            },","","            /**","             * Creates a copy of this object.","             *","             * @return {Object} The clone.","             *","             * @example","             *","             *     var clone = instance.clone();","             */","            clone: function () {","                return this.init.prototype.extend(this);","            }","        };","    }());","","    /**","     * An array of 32-bit words.","     *","     * @property {Array} words The array of 32-bit words.","     * @property {number} sigBytes The number of significant bytes in this word array.","     */","    var WordArray = C_lib.WordArray = Base.extend({","        /**","         * Initializes a newly created word array.","         *","         * @param {Array} words (Optional) An array of 32-bit words.","         * @param {number} sigBytes (Optional) The number of significant bytes in the words.","         *","         * @example","         *","         *     var wordArray = CryptoJS.lib.WordArray.create();","         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);","         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);","         */","        init: function (words, sigBytes) {","            words = this.words = words || [];","","            if (sigBytes != undefined) {","                this.sigBytes = sigBytes;","            } else {","                this.sigBytes = words.length * 4;","            }","        },","","        /**","         * Converts this word array to a string.","         *","         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex","         *","         * @return {string} The stringified word array.","         *","         * @example","         *","         *     var string = wordArray + '';","         *     var string = wordArray.toString();","         *     var string = wordArray.toString(CryptoJS.enc.Utf8);","         */","        toString: function (encoder) {","            return (encoder || Hex).stringify(this);","        },","","        /**","         * Concatenates a word array to this word array.","         *","         * @param {WordArray} wordArray The word array to append.","         *","         * @return {WordArray} This word array.","         *","         * @example","         *","         *     wordArray1.concat(wordArray2);","         */","        concat: function (wordArray) {","            // Shortcuts","            var thisWords = this.words;","            var thatWords = wordArray.words;","            var thisSigBytes = this.sigBytes;","            var thatSigBytes = wordArray.sigBytes;","","            // Clamp excess bits","            this.clamp();","","            // Concat","            if (thisSigBytes % 4) {","                // Copy one byte at a time","                for (var i = 0; i < thatSigBytes; i++) {","                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);","                }","            } else if (thatWords.length > 0xffff) {","                // Copy one word at a time","                for (var i = 0; i < thatSigBytes; i += 4) {","                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];","                }","            } else {","                // Copy all words at once","                thisWords.push.apply(thisWords, thatWords);","            }","            this.sigBytes += thatSigBytes;","","            // Chainable","            return this;","        },","","        /**","         * Removes insignificant bits.","         *","         * @example","         *","         *     wordArray.clamp();","         */","        clamp: function () {","            // Shortcuts","            var words = this.words;","            var sigBytes = this.sigBytes;","","            // Clamp","            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);","            words.length = Math.ceil(sigBytes / 4);","        },","","        /**","         * Creates a copy of this word array.","         *","         * @return {WordArray} The clone.","         *","         * @example","         *","         *     var clone = wordArray.clone();","         */","        clone: function () {","            var clone = Base.clone.call(this);","            clone.words = this.words.slice(0);","","            return clone;","        },","","        /**","         * Creates a word array filled with random bytes.","         *","         * @param {number} nBytes The number of random bytes to generate.","         *","         * @return {WordArray} The random word array.","         *","         * @static","         *","         * @example","         *","         *     var wordArray = CryptoJS.lib.WordArray.random(16);","         */","        random: function (nBytes) {","            var words = [];","            for (var i = 0; i < nBytes; i += 4) {","                words.push((Math.random() * 0x100000000) | 0);","            }","","            return new WordArray.init(words, nBytes);","        }","    });","","    /**","     * Encoder namespace.","     */","    var C_enc = C.enc = {};","","    /**","     * Hex encoding strategy.","     */","    var Hex = C_enc.Hex = {","        /**","         * Converts a word array to a hex string.","         *","         * @param {WordArray} wordArray The word array.","         *","         * @return {string} The hex string.","         *","         * @static","         *","         * @example","         *","         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);","         */","        stringify: function (wordArray) {","            // Shortcuts","            var words = wordArray.words;","            var sigBytes = wordArray.sigBytes;","","            // Convert","            var hexChars = [];","            for (var i = 0; i < sigBytes; i++) {","                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","                hexChars.push((bite >>> 4).toString(16));","                hexChars.push((bite & 0x0f).toString(16));","            }","","            return hexChars.join('');","        },","","        /**","         * Converts a hex string to a word array.","         *","         * @param {string} hexStr The hex string.","         *","         * @return {WordArray} The word array.","         *","         * @static","         *","         * @example","         *","         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);","         */","        parse: function (hexStr) {","            // Shortcut","            var hexStrLength = hexStr.length;","","            // Convert","            var words = [];","            for (var i = 0; i < hexStrLength; i += 2) {","                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);","            }","","            return new WordArray.init(words, hexStrLength / 2);","        }","    };","","    /**","     * Latin1 encoding strategy.","     */","    var Latin1 = C_enc.Latin1 = {","        /**","         * Converts a word array to a Latin1 string.","         *","         * @param {WordArray} wordArray The word array.","         *","         * @return {string} The Latin1 string.","         *","         * @static","         *","         * @example","         *","         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);","         */","        stringify: function (wordArray) {","            // Shortcuts","            var words = wordArray.words;","            var sigBytes = wordArray.sigBytes;","","            // Convert","            var latin1Chars = [];","            for (var i = 0; i < sigBytes; i++) {","                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","                latin1Chars.push(String.fromCharCode(bite));","            }","","            return latin1Chars.join('');","        },","","        /**","         * Converts a Latin1 string to a word array.","         *","         * @param {string} latin1Str The Latin1 string.","         *","         * @return {WordArray} The word array.","         *","         * @static","         *","         * @example","         *","         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);","         */","        parse: function (latin1Str) {","            // Shortcut","            var latin1StrLength = latin1Str.length;","","            // Convert","            var words = [];","            for (var i = 0; i < latin1StrLength; i++) {","                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);","            }","","            return new WordArray.init(words, latin1StrLength);","        }","    };","","    /**","     * UTF-8 encoding strategy.","     */","    var Utf8 = C_enc.Utf8 = {","        /**","         * Converts a word array to a UTF-8 string.","         *","         * @param {WordArray} wordArray The word array.","         *","         * @return {string} The UTF-8 string.","         *","         * @static","         *","         * @example","         *","         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);","         */","        stringify: function (wordArray) {","            try {","                return decodeURIComponent(escape(Latin1.stringify(wordArray)));","            } catch (e) {","                throw new Error('Malformed UTF-8 data');","            }","        },","","        /**","         * Converts a UTF-8 string to a word array.","         *","         * @param {string} utf8Str The UTF-8 string.","         *","         * @return {WordArray} The word array.","         *","         * @static","         *","         * @example","         *","         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);","         */","        parse: function (utf8Str) {","            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));","        }","    };","","    /**","     * Abstract buffered block algorithm template.","     *","     * The property blockSize must be implemented in a concrete subtype.","     *","     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0","     */","    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({","        /**","         * Resets this block algorithm's data buffer to its initial state.","         *","         * @example","         *","         *     bufferedBlockAlgorithm.reset();","         */","        reset: function () {","            // Initial values","            this._data = new WordArray.init();","            this._nDataBytes = 0;","        },","","        /**","         * Adds new data to this block algorithm's buffer.","         *","         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.","         *","         * @example","         *","         *     bufferedBlockAlgorithm._append('data');","         *     bufferedBlockAlgorithm._append(wordArray);","         */","        _append: function (data) {","            // Convert string to WordArray, else assume WordArray already","            if (typeof data == 'string') {","                data = Utf8.parse(data);","            }","","            // Append","            this._data.concat(data);","            this._nDataBytes += data.sigBytes;","        },","","        /**","         * Processes available data blocks.","         *","         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.","         *","         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.","         *","         * @return {WordArray} The processed data.","         *","         * @example","         *","         *     var processedData = bufferedBlockAlgorithm._process();","         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');","         */","        _process: function (doFlush) {","            // Shortcuts","            var data = this._data;","            var dataWords = data.words;","            var dataSigBytes = data.sigBytes;","            var blockSize = this.blockSize;","            var blockSizeBytes = blockSize * 4;","","            // Count blocks ready","            var nBlocksReady = dataSigBytes / blockSizeBytes;","            if (doFlush) {","                // Round up to include partial blocks","                nBlocksReady = Math.ceil(nBlocksReady);","            } else {","                // Round down to include only full blocks,","                // less the number of blocks that must remain in the buffer","                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);","            }","","            // Count words ready","            var nWordsReady = nBlocksReady * blockSize;","","            // Count bytes ready","            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);","","            // Process blocks","            if (nWordsReady) {","                for (var offset = 0; offset < nWordsReady; offset += blockSize) {","                    // Perform concrete-algorithm logic","                    this._doProcessBlock(dataWords, offset);","                }","","                // Remove processed words","                var processedWords = dataWords.splice(0, nWordsReady);","                data.sigBytes -= nBytesReady;","            }","","            // Return processed words","            return new WordArray.init(processedWords, nBytesReady);","        },","","        /**","         * Creates a copy of this object.","         *","         * @return {Object} The clone.","         *","         * @example","         *","         *     var clone = bufferedBlockAlgorithm.clone();","         */","        clone: function () {","            var clone = Base.clone.call(this);","            clone._data = this._data.clone();","","            return clone;","        },","","        _minBufferSize: 0","    });","","    /**","     * Abstract hasher template.","     *","     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)","     */","    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({","        /**","         * Configuration options.","         */","        cfg: Base.extend(),","","        /**","         * Initializes a newly created hasher.","         *","         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.","         *","         * @example","         *","         *     var hasher = CryptoJS.algo.SHA256.create();","         */","        init: function (cfg) {","            // Apply config defaults","            this.cfg = this.cfg.extend(cfg);","","            // Set initial values","            this.reset();","        },","","        /**","         * Resets this hasher to its initial state.","         *","         * @example","         *","         *     hasher.reset();","         */","        reset: function () {","            // Reset data buffer","            BufferedBlockAlgorithm.reset.call(this);","","            // Perform concrete-hasher logic","            this._doReset();","        },","","        /**","         * Updates this hasher with a message.","         *","         * @param {WordArray|string} messageUpdate The message to append.","         *","         * @return {Hasher} This hasher.","         *","         * @example","         *","         *     hasher.update('message');","         *     hasher.update(wordArray);","         */","        update: function (messageUpdate) {","            // Append","            this._append(messageUpdate);","","            // Update the hash","            this._process();","","            // Chainable","            return this;","        },","","        /**","         * Finalizes the hash computation.","         * Note that the finalize operation is effectively a destructive, read-once operation.","         *","         * @param {WordArray|string} messageUpdate (Optional) A final message update.","         *","         * @return {WordArray} The hash.","         *","         * @example","         *","         *     var hash = hasher.finalize();","         *     var hash = hasher.finalize('message');","         *     var hash = hasher.finalize(wordArray);","         */","        finalize: function (messageUpdate) {","            // Final message update","            if (messageUpdate) {","                this._append(messageUpdate);","            }","","            // Perform concrete-hasher logic","            var hash = this._doFinalize();","","            return hash;","        },","","        blockSize: 512/32,","","        /**","         * Creates a shortcut function to a hasher's object interface.","         *","         * @param {Hasher} hasher The hasher to create a helper for.","         *","         * @return {Function} The shortcut function.","         *","         * @static","         *","         * @example","         *","         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);","         */","        _createHelper: function (hasher) {","            return function (message, cfg) {","                return new hasher.init(cfg).finalize(message);","            };","        },","","        /**","         * Creates a shortcut function to the HMAC's object interface.","         *","         * @param {Hasher} hasher The hasher to use in this HMAC helper.","         *","         * @return {Function} The shortcut function.","         *","         * @static","         *","         * @example","         *","         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);","         */","        _createHmacHelper: function (hasher) {","            return function (message, key) {","                return new C_algo.HMAC.init(hasher, key).finalize(message);","            };","        }","    });","","    /**","     * Algorithm namespace.","     */","    var C_algo = C.algo = {};","","    return C;","}(Math));","","exports.CryptoJS = CryptoJS;",""],"l":{"10":1,"14":1,"19":1,"24":1,"25":1,"27":1,"48":22,"49":22,"52":22,"53":19,"57":22,"58":16,"59":0,"64":22,"67":22,"69":22,"85":0,"86":0,"88":0,"118":19,"119":71,"120":71,"125":19,"126":2,"140":0,"151":1,"165":0,"167":0,"168":0,"170":0,"188":0,"204":0,"205":0,"206":0,"207":0,"210":0,"213":0,"215":0,"216":0,"217":0,"219":0,"221":0,"222":0,"226":0,"228":0,"231":0,"243":0,"244":0,"247":0,"248":0,"261":0,"262":0,"264":0,"281":0,"282":0,"283":0,"286":0,"293":1,"298":1,"314":0,"315":0,"318":0,"319":0,"320":0,"321":0,"322":0,"325":0,"343":0,"346":0,"347":0,"348":0,"351":0,"358":1,"374":0,"375":0,"378":0,"379":0,"380":0,"381":0,"384":0,"402":0,"405":0,"406":0,"407":0,"410":0,"417":1,"432":0,"433":0,"435":0,"453":0,"464":1,"474":0,"475":0,"490":0,"491":0,"495":0,"496":0,"515":0,"516":0,"517":0,"518":0,"519":0,"522":0,"523":0,"525":0,"529":0,"533":0,"536":0,"539":0,"540":0,"542":0,"546":0,"547":0,"551":0,"564":0,"565":0,"567":0,"578":1,"595":0,"598":0,"610":0,"613":0,"630":0,"633":0,"636":0,"655":0,"656":0,"660":0,"662":0,"681":1,"682":0,"700":1,"701":0,"709":1,"711":1,"714":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/enc-base64.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/enc-base64.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":40}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":111,"column":5}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":36}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":22}},"7":{"start":{"line":19,"column":4},"end":{"line":110,"column":6}},"8":{"start":{"line":35,"column":12},"end":{"line":35,"column":40}},"9":{"start":{"line":36,"column":12},"end":{"line":36,"column":46}},"10":{"start":{"line":37,"column":12},"end":{"line":37,"column":32}},"11":{"start":{"line":40,"column":12},"end":{"line":40,"column":30}},"12":{"start":{"line":43,"column":12},"end":{"line":43,"column":33}},"13":{"start":{"line":44,"column":12},"end":{"line":54,"column":13}},"14":{"start":{"line":45,"column":16},"end":{"line":45,"column":87}},"15":{"start":{"line":46,"column":16},"end":{"line":46,"column":87}},"16":{"start":{"line":47,"column":16},"end":{"line":47,"column":87}},"17":{"start":{"line":49,"column":16},"end":{"line":49,"column":67}},"18":{"start":{"line":51,"column":16},"end":{"line":53,"column":17}},"19":{"start":{"line":52,"column":20},"end":{"line":52,"column":85}},"20":{"start":{"line":57,"column":12},"end":{"line":57,"column":45}},"21":{"start":{"line":58,"column":12},"end":{"line":62,"column":13}},"22":{"start":{"line":59,"column":16},"end":{"line":61,"column":17}},"23":{"start":{"line":60,"column":20},"end":{"line":60,"column":50}},"24":{"start":{"line":64,"column":12},"end":{"line":64,"column":40}},"25":{"start":{"line":82,"column":12},"end":{"line":82,"column":51}},"26":{"start":{"line":83,"column":12},"end":{"line":83,"column":32}},"27":{"start":{"line":86,"column":12},"end":{"line":86,"column":45}},"28":{"start":{"line":87,"column":12},"end":{"line":92,"column":13}},"29":{"start":{"line":88,"column":16},"end":{"line":88,"column":66}},"30":{"start":{"line":89,"column":16},"end":{"line":91,"column":17}},"31":{"start":{"line":90,"column":20},"end":{"line":90,"column":51}},"32":{"start":{"line":95,"column":12},"end":{"line":95,"column":27}},"33":{"start":{"line":96,"column":12},"end":{"line":96,"column":27}},"34":{"start":{"line":97,"column":12},"end":{"line":104,"column":13}},"35":{"start":{"line":98,"column":16},"end":{"line":103,"column":17}},"36":{"start":{"line":99,"column":20},"end":{"line":99,"column":86}},"37":{"start":{"line":100,"column":20},"end":{"line":100,"column":87}},"38":{"start":{"line":101,"column":20},"end":{"line":101,"column":86}},"39":{"start":{"line":102,"column":20},"end":{"line":102,"column":29}},"40":{"start":{"line":106,"column":12},"end":{"line":106,"column":51}}},"branchMap":{"1":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":33},"end":{"line":51,"column":38}},{"start":{"line":51,"column":44},"end":{"line":51,"column":67}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":12}},{"start":{"line":58,"column":12},"end":{"line":58,"column":12}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":12}},{"start":{"line":87,"column":12},"end":{"line":87,"column":12}}]},"4":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":16}},{"start":{"line":89,"column":16},"end":{"line":89,"column":16}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":16}},{"start":{"line":98,"column":16},"end":{"line":98,"column":16}}]}},"code":["var CryptoJS = require('./core').CryptoJS;","","/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","(function () {","    // Shortcuts","    var C = CryptoJS;","    var C_lib = C.lib;","    var WordArray = C_lib.WordArray;","    var C_enc = C.enc;","","    /**","     * Base64 encoding strategy.","     */","    var Base64 = C_enc.Base64 = {","        /**","         * Converts a word array to a Base64 string.","         *","         * @param {WordArray} wordArray The word array.","         *","         * @return {string} The Base64 string.","         *","         * @static","         *","         * @example","         *","         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);","         */","        stringify: function (wordArray) {","            // Shortcuts","            var words = wordArray.words;","            var sigBytes = wordArray.sigBytes;","            var map = this._map;","","            // Clamp excess bits","            wordArray.clamp();","","            // Convert","            var base64Chars = [];","            for (var i = 0; i < sigBytes; i += 3) {","                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;","                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;","                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;","","                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;","","                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {","                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));","                }","            }","","            // Add padding","            var paddingChar = map.charAt(64);","            if (paddingChar) {","                while (base64Chars.length % 4) {","                    base64Chars.push(paddingChar);","                }","            }","","            return base64Chars.join('');","        },","","        /**","         * Converts a Base64 string to a word array.","         *","         * @param {string} base64Str The Base64 string.","         *","         * @return {WordArray} The word array.","         *","         * @static","         *","         * @example","         *","         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);","         */","        parse: function (base64Str) {","            // Shortcuts","            var base64StrLength = base64Str.length;","            var map = this._map;","","            // Ignore padding","            var paddingChar = map.charAt(64);","            if (paddingChar) {","                var paddingIndex = base64Str.indexOf(paddingChar);","                if (paddingIndex != -1) {","                    base64StrLength = paddingIndex;","                }","            }","","            // Convert","            var words = [];","            var nBytes = 0;","            for (var i = 0; i < base64StrLength; i++) {","                if (i % 4) {","                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);","                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);","                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);","                    nBytes++;","                }","            }","","            return WordArray.create(words, nBytes);","        },","","        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='","    };","}());",""],"l":{"1":1,"9":1,"11":1,"12":1,"13":1,"14":1,"19":1,"35":0,"36":0,"37":0,"40":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"51":0,"52":0,"57":0,"58":0,"59":0,"60":0,"64":0,"82":0,"83":0,"86":0,"87":0,"88":0,"89":0,"90":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"106":0}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/md5.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/md5.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":64,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":1,"131":0,"132":0,"133":1,"134":0,"135":0,"136":1,"137":0,"138":0,"139":1,"140":1},"b":{},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":17}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":17}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":30}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":46}}},"5":{"name":"(anonymous_5)","line":153,"loc":{"start":{"line":153,"column":21},"end":{"line":153,"column":33}}},"6":{"name":"(anonymous_6)","line":197,"loc":{"start":{"line":197,"column":15},"end":{"line":197,"column":27}}},"7":{"name":"FF","line":205,"loc":{"start":{"line":205,"column":4},"end":{"line":205,"column":37}}},"8":{"name":"GG","line":210,"loc":{"start":{"line":210,"column":4},"end":{"line":210,"column":37}}},"9":{"name":"HH","line":215,"loc":{"start":{"line":215,"column":4},"end":{"line":215,"column":37}}},"10":{"name":"II","line":220,"loc":{"start":{"line":220,"column":4},"end":{"line":220,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":256,"column":9}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":36}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"9":{"start":{"line":21,"column":4},"end":{"line":25,"column":9}},"10":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":65}},"12":{"start":{"line":30,"column":4},"end":{"line":203,"column":7}},"13":{"start":{"line":32,"column":12},"end":{"line":35,"column":15}},"14":{"start":{"line":40,"column":12},"end":{"line":49,"column":13}},"15":{"start":{"line":42,"column":16},"end":{"line":42,"column":42}},"16":{"start":{"line":43,"column":16},"end":{"line":43,"column":45}},"17":{"start":{"line":45,"column":16},"end":{"line":48,"column":18}},"18":{"start":{"line":52,"column":12},"end":{"line":52,"column":37}},"19":{"start":{"line":54,"column":12},"end":{"line":54,"column":44}},"20":{"start":{"line":55,"column":12},"end":{"line":55,"column":44}},"21":{"start":{"line":56,"column":12},"end":{"line":56,"column":44}},"22":{"start":{"line":57,"column":12},"end":{"line":57,"column":44}},"23":{"start":{"line":58,"column":12},"end":{"line":58,"column":44}},"24":{"start":{"line":59,"column":12},"end":{"line":59,"column":44}},"25":{"start":{"line":60,"column":12},"end":{"line":60,"column":44}},"26":{"start":{"line":61,"column":12},"end":{"line":61,"column":44}},"27":{"start":{"line":62,"column":12},"end":{"line":62,"column":44}},"28":{"start":{"line":63,"column":12},"end":{"line":63,"column":44}},"29":{"start":{"line":64,"column":12},"end":{"line":64,"column":45}},"30":{"start":{"line":65,"column":12},"end":{"line":65,"column":45}},"31":{"start":{"line":66,"column":12},"end":{"line":66,"column":45}},"32":{"start":{"line":67,"column":12},"end":{"line":67,"column":45}},"33":{"start":{"line":68,"column":12},"end":{"line":68,"column":45}},"34":{"start":{"line":69,"column":12},"end":{"line":69,"column":45}},"35":{"start":{"line":72,"column":12},"end":{"line":72,"column":25}},"36":{"start":{"line":73,"column":12},"end":{"line":73,"column":25}},"37":{"start":{"line":74,"column":12},"end":{"line":74,"column":25}},"38":{"start":{"line":75,"column":12},"end":{"line":75,"column":25}},"39":{"start":{"line":78,"column":12},"end":{"line":78,"column":54}},"40":{"start":{"line":79,"column":12},"end":{"line":79,"column":54}},"41":{"start":{"line":80,"column":12},"end":{"line":80,"column":54}},"42":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"43":{"start":{"line":82,"column":12},"end":{"line":82,"column":54}},"44":{"start":{"line":83,"column":12},"end":{"line":83,"column":54}},"45":{"start":{"line":84,"column":12},"end":{"line":84,"column":54}},"46":{"start":{"line":85,"column":12},"end":{"line":85,"column":54}},"47":{"start":{"line":86,"column":12},"end":{"line":86,"column":54}},"48":{"start":{"line":87,"column":12},"end":{"line":87,"column":54}},"49":{"start":{"line":88,"column":12},"end":{"line":88,"column":55}},"50":{"start":{"line":89,"column":12},"end":{"line":89,"column":55}},"51":{"start":{"line":90,"column":12},"end":{"line":90,"column":55}},"52":{"start":{"line":91,"column":12},"end":{"line":91,"column":55}},"53":{"start":{"line":92,"column":12},"end":{"line":92,"column":55}},"54":{"start":{"line":93,"column":12},"end":{"line":93,"column":55}},"55":{"start":{"line":95,"column":12},"end":{"line":95,"column":55}},"56":{"start":{"line":96,"column":12},"end":{"line":96,"column":55}},"57":{"start":{"line":97,"column":12},"end":{"line":97,"column":55}},"58":{"start":{"line":98,"column":12},"end":{"line":98,"column":55}},"59":{"start":{"line":99,"column":12},"end":{"line":99,"column":55}},"60":{"start":{"line":100,"column":12},"end":{"line":100,"column":55}},"61":{"start":{"line":101,"column":12},"end":{"line":101,"column":55}},"62":{"start":{"line":102,"column":12},"end":{"line":102,"column":55}},"63":{"start":{"line":103,"column":12},"end":{"line":103,"column":55}},"64":{"start":{"line":104,"column":12},"end":{"line":104,"column":55}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":55}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":55}},"67":{"start":{"line":107,"column":12},"end":{"line":107,"column":55}},"68":{"start":{"line":108,"column":12},"end":{"line":108,"column":55}},"69":{"start":{"line":109,"column":12},"end":{"line":109,"column":55}},"70":{"start":{"line":110,"column":12},"end":{"line":110,"column":55}},"71":{"start":{"line":112,"column":12},"end":{"line":112,"column":55}},"72":{"start":{"line":113,"column":12},"end":{"line":113,"column":55}},"73":{"start":{"line":114,"column":12},"end":{"line":114,"column":55}},"74":{"start":{"line":115,"column":12},"end":{"line":115,"column":55}},"75":{"start":{"line":116,"column":12},"end":{"line":116,"column":55}},"76":{"start":{"line":117,"column":12},"end":{"line":117,"column":55}},"77":{"start":{"line":118,"column":12},"end":{"line":118,"column":55}},"78":{"start":{"line":119,"column":12},"end":{"line":119,"column":55}},"79":{"start":{"line":120,"column":12},"end":{"line":120,"column":55}},"80":{"start":{"line":121,"column":12},"end":{"line":121,"column":55}},"81":{"start":{"line":122,"column":12},"end":{"line":122,"column":55}},"82":{"start":{"line":123,"column":12},"end":{"line":123,"column":55}},"83":{"start":{"line":124,"column":12},"end":{"line":124,"column":55}},"84":{"start":{"line":125,"column":12},"end":{"line":125,"column":55}},"85":{"start":{"line":126,"column":12},"end":{"line":126,"column":55}},"86":{"start":{"line":127,"column":12},"end":{"line":127,"column":55}},"87":{"start":{"line":129,"column":12},"end":{"line":129,"column":55}},"88":{"start":{"line":130,"column":12},"end":{"line":130,"column":55}},"89":{"start":{"line":131,"column":12},"end":{"line":131,"column":55}},"90":{"start":{"line":132,"column":12},"end":{"line":132,"column":55}},"91":{"start":{"line":133,"column":12},"end":{"line":133,"column":55}},"92":{"start":{"line":134,"column":12},"end":{"line":134,"column":55}},"93":{"start":{"line":135,"column":12},"end":{"line":135,"column":55}},"94":{"start":{"line":136,"column":12},"end":{"line":136,"column":55}},"95":{"start":{"line":137,"column":12},"end":{"line":137,"column":55}},"96":{"start":{"line":138,"column":12},"end":{"line":138,"column":55}},"97":{"start":{"line":139,"column":12},"end":{"line":139,"column":55}},"98":{"start":{"line":140,"column":12},"end":{"line":140,"column":55}},"99":{"start":{"line":141,"column":12},"end":{"line":141,"column":55}},"100":{"start":{"line":142,"column":12},"end":{"line":142,"column":55}},"101":{"start":{"line":143,"column":12},"end":{"line":143,"column":55}},"102":{"start":{"line":144,"column":12},"end":{"line":144,"column":55}},"103":{"start":{"line":147,"column":12},"end":{"line":147,"column":34}},"104":{"start":{"line":148,"column":12},"end":{"line":148,"column":34}},"105":{"start":{"line":149,"column":12},"end":{"line":149,"column":34}},"106":{"start":{"line":150,"column":12},"end":{"line":150,"column":34}},"107":{"start":{"line":155,"column":12},"end":{"line":155,"column":34}},"108":{"start":{"line":156,"column":12},"end":{"line":156,"column":39}},"109":{"start":{"line":158,"column":12},"end":{"line":158,"column":50}},"110":{"start":{"line":159,"column":12},"end":{"line":159,"column":46}},"111":{"start":{"line":162,"column":12},"end":{"line":162,"column":72}},"112":{"start":{"line":164,"column":12},"end":{"line":164,"column":67}},"113":{"start":{"line":165,"column":12},"end":{"line":165,"column":41}},"114":{"start":{"line":166,"column":12},"end":{"line":169,"column":14}},"115":{"start":{"line":170,"column":12},"end":{"line":173,"column":14}},"116":{"start":{"line":175,"column":12},"end":{"line":175,"column":55}},"117":{"start":{"line":178,"column":12},"end":{"line":178,"column":28}},"118":{"start":{"line":181,"column":12},"end":{"line":181,"column":34}},"119":{"start":{"line":182,"column":12},"end":{"line":182,"column":31}},"120":{"start":{"line":185,"column":12},"end":{"line":191,"column":13}},"121":{"start":{"line":187,"column":16},"end":{"line":187,"column":31}},"122":{"start":{"line":189,"column":16},"end":{"line":190,"column":67}},"123":{"start":{"line":194,"column":12},"end":{"line":194,"column":24}},"124":{"start":{"line":198,"column":12},"end":{"line":198,"column":48}},"125":{"start":{"line":199,"column":12},"end":{"line":199,"column":45}},"126":{"start":{"line":201,"column":12},"end":{"line":201,"column":25}},"127":{"start":{"line":205,"column":4},"end":{"line":208,"column":5}},"128":{"start":{"line":206,"column":8},"end":{"line":206,"column":49}},"129":{"start":{"line":207,"column":8},"end":{"line":207,"column":49}},"130":{"start":{"line":210,"column":4},"end":{"line":213,"column":5}},"131":{"start":{"line":211,"column":8},"end":{"line":211,"column":49}},"132":{"start":{"line":212,"column":8},"end":{"line":212,"column":49}},"133":{"start":{"line":215,"column":4},"end":{"line":218,"column":5}},"134":{"start":{"line":216,"column":8},"end":{"line":216,"column":40}},"135":{"start":{"line":217,"column":8},"end":{"line":217,"column":49}},"136":{"start":{"line":220,"column":4},"end":{"line":223,"column":5}},"137":{"start":{"line":221,"column":8},"end":{"line":221,"column":43}},"138":{"start":{"line":222,"column":8},"end":{"line":222,"column":49}},"139":{"start":{"line":239,"column":4},"end":{"line":239,"column":38}},"140":{"start":{"line":255,"column":4},"end":{"line":255,"column":46}}},"branchMap":{},"code":["var CryptoJS = require('./core').CryptoJS;","","/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","(function (Math) {","    // Shortcuts","    var C = CryptoJS;","    var C_lib = C.lib;","    var WordArray = C_lib.WordArray;","    var Hasher = C_lib.Hasher;","    var C_algo = C.algo;","","    // Constants table","    var T = [];","","    // Compute constants","    (function () {","        for (var i = 0; i < 64; i++) {","            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;","        }","    }());","","    /**","     * MD5 hash algorithm.","     */","    var MD5 = C_algo.MD5 = Hasher.extend({","        _doReset: function () {","            this._hash = new WordArray.init([","                0x67452301, 0xefcdab89,","                0x98badcfe, 0x10325476","            ]);","        },","","        _doProcessBlock: function (M, offset) {","            // Swap endian","            for (var i = 0; i < 16; i++) {","                // Shortcuts","                var offset_i = offset + i;","                var M_offset_i = M[offset_i];","","                M[offset_i] = (","                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |","                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)","                );","            }","","            // Shortcuts","            var H = this._hash.words;","","            var M_offset_0  = M[offset + 0];","            var M_offset_1  = M[offset + 1];","            var M_offset_2  = M[offset + 2];","            var M_offset_3  = M[offset + 3];","            var M_offset_4  = M[offset + 4];","            var M_offset_5  = M[offset + 5];","            var M_offset_6  = M[offset + 6];","            var M_offset_7  = M[offset + 7];","            var M_offset_8  = M[offset + 8];","            var M_offset_9  = M[offset + 9];","            var M_offset_10 = M[offset + 10];","            var M_offset_11 = M[offset + 11];","            var M_offset_12 = M[offset + 12];","            var M_offset_13 = M[offset + 13];","            var M_offset_14 = M[offset + 14];","            var M_offset_15 = M[offset + 15];","","            // Working varialbes","            var a = H[0];","            var b = H[1];","            var c = H[2];","            var d = H[3];","","            // Computation","            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);","            d = FF(d, a, b, c, M_offset_1,  12, T[1]);","            c = FF(c, d, a, b, M_offset_2,  17, T[2]);","            b = FF(b, c, d, a, M_offset_3,  22, T[3]);","            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);","            d = FF(d, a, b, c, M_offset_5,  12, T[5]);","            c = FF(c, d, a, b, M_offset_6,  17, T[6]);","            b = FF(b, c, d, a, M_offset_7,  22, T[7]);","            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);","            d = FF(d, a, b, c, M_offset_9,  12, T[9]);","            c = FF(c, d, a, b, M_offset_10, 17, T[10]);","            b = FF(b, c, d, a, M_offset_11, 22, T[11]);","            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);","            d = FF(d, a, b, c, M_offset_13, 12, T[13]);","            c = FF(c, d, a, b, M_offset_14, 17, T[14]);","            b = FF(b, c, d, a, M_offset_15, 22, T[15]);","","            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);","            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);","            c = GG(c, d, a, b, M_offset_11, 14, T[18]);","            b = GG(b, c, d, a, M_offset_0,  20, T[19]);","            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);","            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);","            c = GG(c, d, a, b, M_offset_15, 14, T[22]);","            b = GG(b, c, d, a, M_offset_4,  20, T[23]);","            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);","            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);","            c = GG(c, d, a, b, M_offset_3,  14, T[26]);","            b = GG(b, c, d, a, M_offset_8,  20, T[27]);","            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);","            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);","            c = GG(c, d, a, b, M_offset_7,  14, T[30]);","            b = GG(b, c, d, a, M_offset_12, 20, T[31]);","","            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);","            d = HH(d, a, b, c, M_offset_8,  11, T[33]);","            c = HH(c, d, a, b, M_offset_11, 16, T[34]);","            b = HH(b, c, d, a, M_offset_14, 23, T[35]);","            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);","            d = HH(d, a, b, c, M_offset_4,  11, T[37]);","            c = HH(c, d, a, b, M_offset_7,  16, T[38]);","            b = HH(b, c, d, a, M_offset_10, 23, T[39]);","            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);","            d = HH(d, a, b, c, M_offset_0,  11, T[41]);","            c = HH(c, d, a, b, M_offset_3,  16, T[42]);","            b = HH(b, c, d, a, M_offset_6,  23, T[43]);","            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);","            d = HH(d, a, b, c, M_offset_12, 11, T[45]);","            c = HH(c, d, a, b, M_offset_15, 16, T[46]);","            b = HH(b, c, d, a, M_offset_2,  23, T[47]);","","            a = II(a, b, c, d, M_offset_0,  6,  T[48]);","            d = II(d, a, b, c, M_offset_7,  10, T[49]);","            c = II(c, d, a, b, M_offset_14, 15, T[50]);","            b = II(b, c, d, a, M_offset_5,  21, T[51]);","            a = II(a, b, c, d, M_offset_12, 6,  T[52]);","            d = II(d, a, b, c, M_offset_3,  10, T[53]);","            c = II(c, d, a, b, M_offset_10, 15, T[54]);","            b = II(b, c, d, a, M_offset_1,  21, T[55]);","            a = II(a, b, c, d, M_offset_8,  6,  T[56]);","            d = II(d, a, b, c, M_offset_15, 10, T[57]);","            c = II(c, d, a, b, M_offset_6,  15, T[58]);","            b = II(b, c, d, a, M_offset_13, 21, T[59]);","            a = II(a, b, c, d, M_offset_4,  6,  T[60]);","            d = II(d, a, b, c, M_offset_11, 10, T[61]);","            c = II(c, d, a, b, M_offset_2,  15, T[62]);","            b = II(b, c, d, a, M_offset_9,  21, T[63]);","","            // Intermediate hash value","            H[0] = (H[0] + a) | 0;","            H[1] = (H[1] + b) | 0;","            H[2] = (H[2] + c) | 0;","            H[3] = (H[3] + d) | 0;","        },","","        _doFinalize: function () {","            // Shortcuts","            var data = this._data;","            var dataWords = data.words;","","            var nBitsTotal = this._nDataBytes * 8;","            var nBitsLeft = data.sigBytes * 8;","","            // Add padding","            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","","            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);","            var nBitsTotalL = nBitsTotal;","            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (","                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |","                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)","            );","            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (","                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |","                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)","            );","","            data.sigBytes = (dataWords.length + 1) * 4;","","            // Hash final blocks","            this._process();","","            // Shortcuts","            var hash = this._hash;","            var H = hash.words;","","            // Swap endian","            for (var i = 0; i < 4; i++) {","                // Shortcut","                var H_i = H[i];","","                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |","                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);","            }","","            // Return final computed hash","            return hash;","        },","","        clone: function () {","            var clone = Hasher.clone.call(this);","            clone._hash = this._hash.clone();","","            return clone;","        }","    });","","    function FF(a, b, c, d, x, s, t) {","        var n = a + ((b & c) | (~b & d)) + x + t;","        return ((n << s) | (n >>> (32 - s))) + b;","    }","","    function GG(a, b, c, d, x, s, t) {","        var n = a + ((b & d) | (c & ~d)) + x + t;","        return ((n << s) | (n >>> (32 - s))) + b;","    }","","    function HH(a, b, c, d, x, s, t) {","        var n = a + (b ^ c ^ d) + x + t;","        return ((n << s) | (n >>> (32 - s))) + b;","    }","","    function II(a, b, c, d, x, s, t) {","        var n = a + (c ^ (b | ~d)) + x + t;","        return ((n << s) | (n >>> (32 - s))) + b;","    }","","    /**","     * Shortcut function to the hasher's object interface.","     *","     * @param {WordArray|string} message The message to hash.","     *","     * @return {WordArray} The hash.","     *","     * @static","     *","     * @example","     *","     *     var hash = CryptoJS.MD5('message');","     *     var hash = CryptoJS.MD5(wordArray);","     */","    C.MD5 = Hasher._createHelper(MD5);","","    /**","     * Shortcut function to the HMAC's object interface.","     *","     * @param {WordArray|string} message The message to hash.","     * @param {WordArray|string} key The secret key.","     *","     * @return {WordArray} The HMAC.","     *","     * @static","     *","     * @example","     *","     *     var hmac = CryptoJS.HmacMD5(message, key);","     */","    C.HmacMD5 = Hasher._createHmacHelper(MD5);","}(Math));",""],"l":{"1":1,"9":1,"11":1,"12":1,"13":1,"14":1,"15":1,"18":1,"21":1,"22":1,"23":64,"30":1,"32":0,"40":0,"42":0,"43":0,"45":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"147":0,"148":0,"149":0,"150":0,"155":0,"156":0,"158":0,"159":0,"162":0,"164":0,"165":0,"166":0,"170":0,"175":0,"178":0,"181":0,"182":0,"185":0,"187":0,"189":0,"194":0,"198":0,"199":0,"201":0,"205":1,"206":0,"207":0,"210":1,"211":0,"212":0,"215":1,"216":0,"217":0,"220":1,"221":0,"222":0,"239":1,"255":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/evpkdf.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/evpkdf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":13}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":14},"end":{"line":47,"column":29}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":43}}},"4":{"name":"(anonymous_4)","line":117,"loc":{"start":{"line":117,"column":15},"end":{"line":117,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":120,"column":5}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":36}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"9":{"start":{"line":22,"column":4},"end":{"line":98,"column":7}},"10":{"start":{"line":48,"column":12},"end":{"line":48,"column":44}},"11":{"start":{"line":65,"column":12},"end":{"line":65,"column":31}},"12":{"start":{"line":68,"column":12},"end":{"line":68,"column":45}},"13":{"start":{"line":71,"column":12},"end":{"line":71,"column":48}},"14":{"start":{"line":74,"column":12},"end":{"line":74,"column":51}},"15":{"start":{"line":75,"column":12},"end":{"line":75,"column":38}},"16":{"start":{"line":76,"column":12},"end":{"line":76,"column":44}},"17":{"start":{"line":79,"column":12},"end":{"line":93,"column":13}},"18":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"19":{"start":{"line":81,"column":20},"end":{"line":81,"column":41}},"20":{"start":{"line":83,"column":16},"end":{"line":83,"column":67}},"21":{"start":{"line":84,"column":16},"end":{"line":84,"column":31}},"22":{"start":{"line":87,"column":16},"end":{"line":90,"column":17}},"23":{"start":{"line":88,"column":20},"end":{"line":88,"column":51}},"24":{"start":{"line":89,"column":20},"end":{"line":89,"column":35}},"25":{"start":{"line":92,"column":16},"end":{"line":92,"column":41}},"26":{"start":{"line":94,"column":12},"end":{"line":94,"column":46}},"27":{"start":{"line":96,"column":12},"end":{"line":96,"column":30}},"28":{"start":{"line":117,"column":4},"end":{"line":119,"column":6}},"29":{"start":{"line":118,"column":8},"end":{"line":118,"column":58}}},"branchMap":{"1":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":80,"column":16}},{"start":{"line":80,"column":16},"end":{"line":80,"column":16}}]}},"code":["var CryptoJS = require('./core').CryptoJS;","","/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","(function () {","    // Shortcuts","    var C = CryptoJS;","    var C_lib = C.lib;","    var Base = C_lib.Base;","    var WordArray = C_lib.WordArray;","    var C_algo = C.algo;","    var MD5 = C_algo.MD5;","","    /**","     * This key derivation function is meant to conform with EVP_BytesToKey.","     * www.openssl.org/docs/crypto/EVP_BytesToKey.html","     */","    var EvpKDF = C_algo.EvpKDF = Base.extend({","        /**","         * Configuration options.","         *","         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)","         * @property {Hasher} hasher The hash algorithm to use. Default: MD5","         * @property {number} iterations The number of iterations to perform. Default: 1","         */","        cfg: Base.extend({","            keySize: 128/32,","            hasher: MD5,","            iterations: 1","        }),","","        /**","         * Initializes a newly created key derivation function.","         *","         * @param {Object} cfg (Optional) The configuration options to use for the derivation.","         *","         * @example","         *","         *     var kdf = CryptoJS.algo.EvpKDF.create();","         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });","         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });","         */","        init: function (cfg) {","            this.cfg = this.cfg.extend(cfg);","        },","","        /**","         * Derives a key from a password.","         *","         * @param {WordArray|string} password The password.","         * @param {WordArray|string} salt A salt.","         *","         * @return {WordArray} The derived key.","         *","         * @example","         *","         *     var key = kdf.compute(password, salt);","         */","        compute: function (password, salt) {","            // Shortcut","            var cfg = this.cfg;","","            // Init hasher","            var hasher = cfg.hasher.create();","","            // Initial values","            var derivedKey = WordArray.create();","","            // Shortcuts","            var derivedKeyWords = derivedKey.words;","            var keySize = cfg.keySize;","            var iterations = cfg.iterations;","","            // Generate key","            while (derivedKeyWords.length < keySize) {","                if (block) {","                    hasher.update(block);","                }","                var block = hasher.update(password).finalize(salt);","                hasher.reset();","","                // Iterations","                for (var i = 1; i < iterations; i++) {","                    block = hasher.finalize(block);","                    hasher.reset();","                }","","                derivedKey.concat(block);","            }","            derivedKey.sigBytes = keySize * 4;","","            return derivedKey;","        }","    });","","    /**","     * Derives a key from a password.","     *","     * @param {WordArray|string} password The password.","     * @param {WordArray|string} salt A salt.","     * @param {Object} cfg (Optional) The configuration options to use for this computation.","     *","     * @return {WordArray} The derived key.","     *","     * @static","     *","     * @example","     *","     *     var key = CryptoJS.EvpKDF(password, salt);","     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });","     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });","     */","    C.EvpKDF = function (password, salt, cfg) {","        return EvpKDF.create(cfg).compute(password, salt);","    };","}());",""],"l":{"1":1,"9":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"22":1,"48":0,"65":0,"68":0,"71":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"83":0,"84":0,"87":0,"88":0,"89":0,"92":0,"94":0,"96":0,"117":1,"118":0}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/cipher-core.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/cipher-core.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":1,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":1,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":24},"end":{"line":12,"column":45}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":45}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":25},"end":{"line":73,"column":45}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":14},"end":{"line":88,"column":45}}},"5":{"name":"(anonymous_5)","line":107,"loc":{"start":{"line":107,"column":15},"end":{"line":107,"column":27}}},"6":{"name":"(anonymous_6)","line":127,"loc":{"start":{"line":127,"column":17},"end":{"line":127,"column":39}}},"7":{"name":"(anonymous_7)","line":149,"loc":{"start":{"line":149,"column":18},"end":{"line":149,"column":40}}},"8":{"name":"(anonymous_8)","line":182,"loc":{"start":{"line":182,"column":24},"end":{"line":182,"column":36}}},"9":{"name":"selectCipherStrategy","line":183,"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":47}}},"10":{"name":"(anonymous_10)","line":191,"loc":{"start":{"line":191,"column":19},"end":{"line":191,"column":37}}},"11":{"name":"(anonymous_11)","line":193,"loc":{"start":{"line":193,"column":29},"end":{"line":193,"column":58}}},"12":{"name":"(anonymous_12)","line":197,"loc":{"start":{"line":197,"column":29},"end":{"line":197,"column":61}}},"13":{"name":"(anonymous_13)","line":211,"loc":{"start":{"line":211,"column":21},"end":{"line":211,"column":33}}},"14":{"name":"(anonymous_14)","line":242,"loc":{"start":{"line":242,"column":25},"end":{"line":242,"column":47}}},"15":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":25},"end":{"line":258,"column":47}}},"16":{"name":"(anonymous_16)","line":272,"loc":{"start":{"line":272,"column":14},"end":{"line":272,"column":36}}},"17":{"name":"(anonymous_17)","line":281,"loc":{"start":{"line":281,"column":28},"end":{"line":281,"column":40}}},"18":{"name":"(anonymous_18)","line":301,"loc":{"start":{"line":301,"column":26},"end":{"line":301,"column":51}}},"19":{"name":"(anonymous_19)","line":329,"loc":{"start":{"line":329,"column":26},"end":{"line":329,"column":51}}},"20":{"name":"xorBlock","line":346,"loc":{"start":{"line":346,"column":8},"end":{"line":346,"column":52}}},"21":{"name":"(anonymous_21)","line":390,"loc":{"start":{"line":390,"column":13},"end":{"line":390,"column":40}}},"22":{"name":"(anonymous_22)","line":422,"loc":{"start":{"line":422,"column":15},"end":{"line":422,"column":31}}},"23":{"name":"(anonymous_23)","line":448,"loc":{"start":{"line":448,"column":15},"end":{"line":448,"column":27}}},"24":{"name":"(anonymous_24)","line":469,"loc":{"start":{"line":469,"column":25},"end":{"line":469,"column":50}}},"25":{"name":"(anonymous_25)","line":473,"loc":{"start":{"line":473,"column":21},"end":{"line":473,"column":33}}},"26":{"name":"(anonymous_26)","line":531,"loc":{"start":{"line":531,"column":14},"end":{"line":531,"column":38}}},"27":{"name":"(anonymous_27)","line":550,"loc":{"start":{"line":550,"column":18},"end":{"line":550,"column":39}}},"28":{"name":"(anonymous_28)","line":577,"loc":{"start":{"line":577,"column":19},"end":{"line":577,"column":43}}},"29":{"name":"(anonymous_29)","line":605,"loc":{"start":{"line":605,"column":15},"end":{"line":605,"column":37}}},"30":{"name":"(anonymous_30)","line":657,"loc":{"start":{"line":657,"column":17},"end":{"line":657,"column":54}}},"31":{"name":"(anonymous_31)","line":698,"loc":{"start":{"line":698,"column":17},"end":{"line":698,"column":57}}},"32":{"name":"(anonymous_32)","line":726,"loc":{"start":{"line":726,"column":16},"end":{"line":726,"column":46}}},"33":{"name":"(anonymous_33)","line":761,"loc":{"start":{"line":761,"column":17},"end":{"line":761,"column":60}}},"34":{"name":"(anonymous_34)","line":810,"loc":{"start":{"line":810,"column":17},"end":{"line":810,"column":59}}},"35":{"name":"(anonymous_35)","line":846,"loc":{"start":{"line":846,"column":17},"end":{"line":846,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":12,"column":0},"end":{"line":865,"column":5}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":21}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":26}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":36}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":62}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":30}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":31}},"13":{"start":{"line":33,"column":4},"end":{"line":203,"column":7}},"14":{"start":{"line":56,"column":12},"end":{"line":56,"column":63}},"15":{"start":{"line":74,"column":12},"end":{"line":74,"column":63}},"16":{"start":{"line":90,"column":12},"end":{"line":90,"column":44}},"17":{"start":{"line":93,"column":12},"end":{"line":93,"column":40}},"18":{"start":{"line":94,"column":12},"end":{"line":94,"column":28}},"19":{"start":{"line":97,"column":12},"end":{"line":97,"column":25}},"20":{"start":{"line":109,"column":12},"end":{"line":109,"column":52}},"21":{"start":{"line":112,"column":12},"end":{"line":112,"column":28}},"22":{"start":{"line":129,"column":12},"end":{"line":129,"column":37}},"23":{"start":{"line":132,"column":12},"end":{"line":132,"column":35}},"24":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"25":{"start":{"line":152,"column":16},"end":{"line":152,"column":41}},"26":{"start":{"line":156,"column":12},"end":{"line":156,"column":56}},"27":{"start":{"line":158,"column":12},"end":{"line":158,"column":38}},"28":{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},"29":{"start":{"line":184,"column":16},"end":{"line":188,"column":17}},"30":{"start":{"line":185,"column":20},"end":{"line":185,"column":47}},"31":{"start":{"line":187,"column":20},"end":{"line":187,"column":46}},"32":{"start":{"line":191,"column":12},"end":{"line":201,"column":14}},"33":{"start":{"line":192,"column":16},"end":{"line":200,"column":18}},"34":{"start":{"line":194,"column":24},"end":{"line":194,"column":92}},"35":{"start":{"line":198,"column":24},"end":{"line":198,"column":95}},"36":{"start":{"line":210,"column":4},"end":{"line":219,"column":7}},"37":{"start":{"line":213,"column":12},"end":{"line":213,"column":64}},"38":{"start":{"line":215,"column":12},"end":{"line":215,"column":40}},"39":{"start":{"line":224,"column":4},"end":{"line":224,"column":29}},"40":{"start":{"line":229,"column":4},"end":{"line":276,"column":7}},"41":{"start":{"line":243,"column":12},"end":{"line":243,"column":53}},"42":{"start":{"line":259,"column":12},"end":{"line":259,"column":53}},"43":{"start":{"line":273,"column":12},"end":{"line":273,"column":34}},"44":{"start":{"line":274,"column":12},"end":{"line":274,"column":26}},"45":{"start":{"line":281,"column":4},"end":{"line":367,"column":9}},"46":{"start":{"line":285,"column":8},"end":{"line":285,"column":43}},"47":{"start":{"line":290,"column":8},"end":{"line":313,"column":11}},"48":{"start":{"line":303,"column":16},"end":{"line":303,"column":42}},"49":{"start":{"line":304,"column":16},"end":{"line":304,"column":49}},"50":{"start":{"line":307,"column":16},"end":{"line":307,"column":62}},"51":{"start":{"line":308,"column":16},"end":{"line":308,"column":51}},"52":{"start":{"line":311,"column":16},"end":{"line":311,"column":74}},"53":{"start":{"line":318,"column":8},"end":{"line":344,"column":11}},"54":{"start":{"line":331,"column":16},"end":{"line":331,"column":42}},"55":{"start":{"line":332,"column":16},"end":{"line":332,"column":49}},"56":{"start":{"line":335,"column":16},"end":{"line":335,"column":72}},"57":{"start":{"line":338,"column":16},"end":{"line":338,"column":51}},"58":{"start":{"line":339,"column":16},"end":{"line":339,"column":62}},"59":{"start":{"line":342,"column":16},"end":{"line":342,"column":44}},"60":{"start":{"line":346,"column":8},"end":{"line":364,"column":9}},"61":{"start":{"line":348,"column":12},"end":{"line":348,"column":30}},"62":{"start":{"line":351,"column":12},"end":{"line":358,"column":13}},"63":{"start":{"line":352,"column":16},"end":{"line":352,"column":31}},"64":{"start":{"line":355,"column":16},"end":{"line":355,"column":37}},"65":{"start":{"line":357,"column":16},"end":{"line":357,"column":44}},"66":{"start":{"line":361,"column":12},"end":{"line":363,"column":13}},"67":{"start":{"line":362,"column":16},"end":{"line":362,"column":46}},"68":{"start":{"line":366,"column":8},"end":{"line":366,"column":19}},"69":{"start":{"line":372,"column":4},"end":{"line":372,"column":27}},"70":{"start":{"line":377,"column":4},"end":{"line":429,"column":6}},"71":{"start":{"line":392,"column":12},"end":{"line":392,"column":47}},"72":{"start":{"line":395,"column":12},"end":{"line":395,"column":80}},"73":{"start":{"line":398,"column":12},"end":{"line":398,"column":115}},"74":{"start":{"line":401,"column":12},"end":{"line":401,"column":34}},"75":{"start":{"line":402,"column":12},"end":{"line":404,"column":13}},"76":{"start":{"line":403,"column":16},"end":{"line":403,"column":47}},"77":{"start":{"line":405,"column":12},"end":{"line":405,"column":72}},"78":{"start":{"line":408,"column":12},"end":{"line":408,"column":33}},"79":{"start":{"line":424,"column":12},"end":{"line":424,"column":77}},"80":{"start":{"line":427,"column":12},"end":{"line":427,"column":43}},"81":{"start":{"line":436,"column":4},"end":{"line":496,"column":7}},"82":{"start":{"line":450,"column":12},"end":{"line":450,"column":36}},"83":{"start":{"line":453,"column":12},"end":{"line":453,"column":31}},"84":{"start":{"line":454,"column":12},"end":{"line":454,"column":28}},"85":{"start":{"line":455,"column":12},"end":{"line":455,"column":32}},"86":{"start":{"line":458,"column":12},"end":{"line":465,"column":13}},"87":{"start":{"line":459,"column":16},"end":{"line":459,"column":55}},"88":{"start":{"line":461,"column":16},"end":{"line":461,"column":55}},"89":{"start":{"line":464,"column":16},"end":{"line":464,"column":40}},"90":{"start":{"line":466,"column":12},"end":{"line":466,"column":70}},"91":{"start":{"line":470,"column":12},"end":{"line":470,"column":51}},"92":{"start":{"line":475,"column":12},"end":{"line":475,"column":43}},"93":{"start":{"line":478,"column":12},"end":{"line":490,"column":13}},"94":{"start":{"line":480,"column":16},"end":{"line":480,"column":56}},"95":{"start":{"line":483,"column":16},"end":{"line":483,"column":68}},"96":{"start":{"line":486,"column":16},"end":{"line":486,"column":68}},"97":{"start":{"line":489,"column":16},"end":{"line":489,"column":52}},"98":{"start":{"line":492,"column":12},"end":{"line":492,"column":40}},"99":{"start":{"line":511,"column":4},"end":{"line":553,"column":7}},"100":{"start":{"line":532,"column":12},"end":{"line":532,"column":37}},"101":{"start":{"line":551,"column":12},"end":{"line":551,"column":65}},"102":{"start":{"line":558,"column":4},"end":{"line":558,"column":33}},"103":{"start":{"line":563,"column":4},"end":{"line":624,"column":6}},"104":{"start":{"line":579,"column":12},"end":{"line":579,"column":53}},"105":{"start":{"line":580,"column":12},"end":{"line":580,"column":41}},"106":{"start":{"line":583,"column":12},"end":{"line":587,"column":13}},"107":{"start":{"line":584,"column":16},"end":{"line":584,"column":107}},"108":{"start":{"line":586,"column":16},"end":{"line":586,"column":43}},"109":{"start":{"line":589,"column":12},"end":{"line":589,"column":46}},"110":{"start":{"line":607,"column":12},"end":{"line":607,"column":54}},"111":{"start":{"line":610,"column":12},"end":{"line":610,"column":51}},"112":{"start":{"line":613,"column":12},"end":{"line":620,"column":13}},"113":{"start":{"line":615,"column":16},"end":{"line":615,"column":73}},"114":{"start":{"line":618,"column":16},"end":{"line":618,"column":45}},"115":{"start":{"line":619,"column":16},"end":{"line":619,"column":42}},"116":{"start":{"line":622,"column":12},"end":{"line":622,"column":79}},"117":{"start":{"line":629,"column":4},"end":{"line":733,"column":7}},"118":{"start":{"line":659,"column":12},"end":{"line":659,"column":39}},"119":{"start":{"line":662,"column":12},"end":{"line":662,"column":61}},"120":{"start":{"line":663,"column":12},"end":{"line":663,"column":57}},"121":{"start":{"line":666,"column":12},"end":{"line":666,"column":42}},"122":{"start":{"line":669,"column":12},"end":{"line":678,"column":15}},"123":{"start":{"line":700,"column":12},"end":{"line":700,"column":39}},"124":{"start":{"line":703,"column":12},"end":{"line":703,"column":61}},"125":{"start":{"line":706,"column":12},"end":{"line":706,"column":93}},"126":{"start":{"line":708,"column":12},"end":{"line":708,"column":29}},"127":{"start":{"line":727,"column":12},"end":{"line":731,"column":13}},"128":{"start":{"line":728,"column":16},"end":{"line":728,"column":54}},"129":{"start":{"line":730,"column":16},"end":{"line":730,"column":34}},"130":{"start":{"line":738,"column":4},"end":{"line":738,"column":27}},"131":{"start":{"line":743,"column":4},"end":{"line":777,"column":6}},"132":{"start":{"line":763,"column":12},"end":{"line":765,"column":13}},"133":{"start":{"line":764,"column":16},"end":{"line":764,"column":46}},"134":{"start":{"line":768,"column":12},"end":{"line":768,"column":91}},"135":{"start":{"line":771,"column":12},"end":{"line":771,"column":76}},"136":{"start":{"line":772,"column":12},"end":{"line":772,"column":39}},"137":{"start":{"line":775,"column":12},"end":{"line":775,"column":73}},"138":{"start":{"line":783,"column":4},"end":{"line":864,"column":7}},"139":{"start":{"line":812,"column":12},"end":{"line":812,"column":39}},"140":{"start":{"line":815,"column":12},"end":{"line":815,"column":89}},"141":{"start":{"line":818,"column":12},"end":{"line":818,"column":38}},"142":{"start":{"line":821,"column":12},"end":{"line":821,"column":108}},"143":{"start":{"line":824,"column":12},"end":{"line":824,"column":44}},"144":{"start":{"line":826,"column":12},"end":{"line":826,"column":30}},"145":{"start":{"line":848,"column":12},"end":{"line":848,"column":39}},"146":{"start":{"line":851,"column":12},"end":{"line":851,"column":61}},"147":{"start":{"line":854,"column":12},"end":{"line":854,"column":106}},"148":{"start":{"line":857,"column":12},"end":{"line":857,"column":38}},"149":{"start":{"line":860,"column":12},"end":{"line":860,"column":110}},"150":{"start":{"line":862,"column":12},"end":{"line":862,"column":29}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":0},"end":{"line":12,"column":19}},{"start":{"line":12,"column":24},"end":{"line":865,"column":3}}]},"2":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":12}},{"start":{"line":151,"column":12},"end":{"line":151,"column":12}}]},"3":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":16},"end":{"line":184,"column":16}},{"start":{"line":184,"column":16},"end":{"line":184,"column":16}}]},"4":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":12},"end":{"line":351,"column":12}},{"start":{"line":351,"column":12},"end":{"line":351,"column":12}}]},"5":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":12},"end":{"line":458,"column":12}},{"start":{"line":458,"column":12},"end":{"line":458,"column":12}}]},"6":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":54},"end":{"line":466,"column":56}},{"start":{"line":466,"column":60},"end":{"line":466,"column":68}}]},"7":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":12},"end":{"line":478,"column":12}},{"start":{"line":478,"column":12},"end":{"line":478,"column":12}}]},"8":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":20},"end":{"line":551,"column":29}},{"start":{"line":551,"column":33},"end":{"line":551,"column":47}}]},"9":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":12},"end":{"line":583,"column":12}},{"start":{"line":583,"column":12},"end":{"line":583,"column":12}}]},"10":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":12},"end":{"line":613,"column":12}},{"start":{"line":613,"column":12},"end":{"line":613,"column":12}}]},"11":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":16},"end":{"line":613,"column":48}},{"start":{"line":613,"column":52},"end":{"line":613,"column":84}}]},"12":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":12},"end":{"line":727,"column":12}},{"start":{"line":727,"column":12},"end":{"line":727,"column":12}}]},"13":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":12},"end":{"line":763,"column":12}},{"start":{"line":763,"column":12},"end":{"line":763,"column":12}}]}},"code":["var CryptoJS = require('./core').CryptoJS;","","/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","/**"," * Cipher core components."," */","CryptoJS.lib.Cipher || (function (undefined) {","    // Shortcuts","    var C = CryptoJS;","    var C_lib = C.lib;","    var Base = C_lib.Base;","    var WordArray = C_lib.WordArray;","    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;","    var C_enc = C.enc;","    var Utf8 = C_enc.Utf8;","    var Base64 = C_enc.Base64;","    var C_algo = C.algo;","    var EvpKDF = C_algo.EvpKDF;","","    /**","     * Abstract base cipher template.","     *","     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)","     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)","     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.","     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.","     */","    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({","        /**","         * Configuration options.","         *","         * @property {WordArray} iv The IV to use for this operation.","         */","        cfg: Base.extend(),","","        /**","         * Creates this cipher in encryption mode.","         *","         * @param {WordArray} key The key.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {Cipher} A cipher instance.","         *","         * @static","         *","         * @example","         *","         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });","         */","        createEncryptor: function (key, cfg) {","            return this.create(this._ENC_XFORM_MODE, key, cfg);","        },","","        /**","         * Creates this cipher in decryption mode.","         *","         * @param {WordArray} key The key.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {Cipher} A cipher instance.","         *","         * @static","         *","         * @example","         *","         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });","         */","        createDecryptor: function (key, cfg) {","            return this.create(this._DEC_XFORM_MODE, key, cfg);","        },","","        /**","         * Initializes a newly created cipher.","         *","         * @param {number} xformMode Either the encryption or decryption transormation mode constant.","         * @param {WordArray} key The key.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @example","         *","         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });","         */","        init: function (xformMode, key, cfg) {","            // Apply config defaults","            this.cfg = this.cfg.extend(cfg);","","            // Store transform mode and key","            this._xformMode = xformMode;","            this._key = key;","","            // Set initial values","            this.reset();","        },","","        /**","         * Resets this cipher to its initial state.","         *","         * @example","         *","         *     cipher.reset();","         */","        reset: function () {","            // Reset data buffer","            BufferedBlockAlgorithm.reset.call(this);","","            // Perform concrete-cipher logic","            this._doReset();","        },","","        /**","         * Adds data to be encrypted or decrypted.","         *","         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.","         *","         * @return {WordArray} The data after processing.","         *","         * @example","         *","         *     var encrypted = cipher.process('data');","         *     var encrypted = cipher.process(wordArray);","         */","        process: function (dataUpdate) {","            // Append","            this._append(dataUpdate);","","            // Process available blocks","            return this._process();","        },","","        /**","         * Finalizes the encryption or decryption process.","         * Note that the finalize operation is effectively a destructive, read-once operation.","         *","         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.","         *","         * @return {WordArray} The data after final processing.","         *","         * @example","         *","         *     var encrypted = cipher.finalize();","         *     var encrypted = cipher.finalize('data');","         *     var encrypted = cipher.finalize(wordArray);","         */","        finalize: function (dataUpdate) {","            // Final data update","            if (dataUpdate) {","                this._append(dataUpdate);","            }","","            // Perform concrete-cipher logic","            var finalProcessedData = this._doFinalize();","","            return finalProcessedData;","        },","","        keySize: 128/32,","","        ivSize: 128/32,","","        _ENC_XFORM_MODE: 1,","","        _DEC_XFORM_MODE: 2,","","        /**","         * Creates shortcut functions to a cipher's object interface.","         *","         * @param {Cipher} cipher The cipher to create a helper for.","         *","         * @return {Object} An object with encrypt and decrypt shortcut functions.","         *","         * @static","         *","         * @example","         *","         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);","         */","        _createHelper: (function () {","            function selectCipherStrategy(key) {","                if (typeof key == 'string') {","                    return PasswordBasedCipher;","                } else {","                    return SerializableCipher;","                }","            }","","            return function (cipher) {","                return {","                    encrypt: function (message, key, cfg) {","                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);","                    },","","                    decrypt: function (ciphertext, key, cfg) {","                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);","                    }","                };","            };","        }())","    });","","    /**","     * Abstract base stream cipher template.","     *","     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)","     */","    var StreamCipher = C_lib.StreamCipher = Cipher.extend({","        _doFinalize: function () {","            // Process partial blocks","            var finalProcessedBlocks = this._process(!!'flush');","","            return finalProcessedBlocks;","        },","","        blockSize: 1","    });","","    /**","     * Mode namespace.","     */","    var C_mode = C.mode = {};","","    /**","     * Abstract base block cipher mode template.","     */","    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({","        /**","         * Creates this mode for encryption.","         *","         * @param {Cipher} cipher A block cipher instance.","         * @param {Array} iv The IV words.","         *","         * @static","         *","         * @example","         *","         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);","         */","        createEncryptor: function (cipher, iv) {","            return this.Encryptor.create(cipher, iv);","        },","","        /**","         * Creates this mode for decryption.","         *","         * @param {Cipher} cipher A block cipher instance.","         * @param {Array} iv The IV words.","         *","         * @static","         *","         * @example","         *","         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);","         */","        createDecryptor: function (cipher, iv) {","            return this.Decryptor.create(cipher, iv);","        },","","        /**","         * Initializes a newly created mode.","         *","         * @param {Cipher} cipher A block cipher instance.","         * @param {Array} iv The IV words.","         *","         * @example","         *","         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);","         */","        init: function (cipher, iv) {","            this._cipher = cipher;","            this._iv = iv;","        }","    });","","    /**","     * Cipher Block Chaining mode.","     */","    var CBC = C_mode.CBC = (function () {","        /**","         * Abstract base CBC mode.","         */","        var CBC = BlockCipherMode.extend();","","        /**","         * CBC encryptor.","         */","        CBC.Encryptor = CBC.extend({","            /**","             * Processes the data block at offset.","             *","             * @param {Array} words The data words to operate on.","             * @param {number} offset The offset where the block starts.","             *","             * @example","             *","             *     mode.processBlock(data.words, offset);","             */","            processBlock: function (words, offset) {","                // Shortcuts","                var cipher = this._cipher;","                var blockSize = cipher.blockSize;","","                // XOR and encrypt","                xorBlock.call(this, words, offset, blockSize);","                cipher.encryptBlock(words, offset);","","                // Remember this block to use with next block","                this._prevBlock = words.slice(offset, offset + blockSize);","            }","        });","","        /**","         * CBC decryptor.","         */","        CBC.Decryptor = CBC.extend({","            /**","             * Processes the data block at offset.","             *","             * @param {Array} words The data words to operate on.","             * @param {number} offset The offset where the block starts.","             *","             * @example","             *","             *     mode.processBlock(data.words, offset);","             */","            processBlock: function (words, offset) {","                // Shortcuts","                var cipher = this._cipher;","                var blockSize = cipher.blockSize;","","                // Remember this block to use with next block","                var thisBlock = words.slice(offset, offset + blockSize);","","                // Decrypt and XOR","                cipher.decryptBlock(words, offset);","                xorBlock.call(this, words, offset, blockSize);","","                // This block becomes the previous block","                this._prevBlock = thisBlock;","            }","        });","","        function xorBlock(words, offset, blockSize) {","            // Shortcut","            var iv = this._iv;","","            // Choose mixing block","            if (iv) {","                var block = iv;","","                // Remove IV for subsequent blocks","                this._iv = undefined;","            } else {","                var block = this._prevBlock;","            }","","            // XOR blocks","            for (var i = 0; i < blockSize; i++) {","                words[offset + i] ^= block[i];","            }","        }","","        return CBC;","    }());","","    /**","     * Padding namespace.","     */","    var C_pad = C.pad = {};","","    /**","     * PKCS #5/7 padding strategy.","     */","    var Pkcs7 = C_pad.Pkcs7 = {","        /**","         * Pads data using the algorithm defined in PKCS #5/7.","         *","         * @param {WordArray} data The data to pad.","         * @param {number} blockSize The multiple that the data should be padded to.","         *","         * @static","         *","         * @example","         *","         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);","         */","        pad: function (data, blockSize) {","            // Shortcut","            var blockSizeBytes = blockSize * 4;","","            // Count padding bytes","            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;","","            // Create padding word","            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;","","            // Create padding","            var paddingWords = [];","            for (var i = 0; i < nPaddingBytes; i += 4) {","                paddingWords.push(paddingWord);","            }","            var padding = WordArray.create(paddingWords, nPaddingBytes);","","            // Add padding","            data.concat(padding);","        },","","        /**","         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.","         *","         * @param {WordArray} data The data to unpad.","         *","         * @static","         *","         * @example","         *","         *     CryptoJS.pad.Pkcs7.unpad(wordArray);","         */","        unpad: function (data) {","            // Get number of padding bytes from last byte","            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;","","            // Remove padding","            data.sigBytes -= nPaddingBytes;","        }","    };","","    /**","     * Abstract base block cipher template.","     *","     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)","     */","    var BlockCipher = C_lib.BlockCipher = Cipher.extend({","        /**","         * Configuration options.","         *","         * @property {Mode} mode The block mode to use. Default: CBC","         * @property {Padding} padding The padding strategy to use. Default: Pkcs7","         */","        cfg: Cipher.cfg.extend({","            mode: CBC,","            padding: Pkcs7","        }),","","        reset: function () {","            // Reset cipher","            Cipher.reset.call(this);","","            // Shortcuts","            var cfg = this.cfg;","            var iv = cfg.iv;","            var mode = cfg.mode;","","            // Reset block mode","            if (this._xformMode == this._ENC_XFORM_MODE) {","                var modeCreator = mode.createEncryptor;","            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {","                var modeCreator = mode.createDecryptor;","","                // Keep at least one block in the buffer for unpadding","                this._minBufferSize = 1;","            }","            this._mode = modeCreator.call(mode, this, iv && iv.words);","        },","","        _doProcessBlock: function (words, offset) {","            this._mode.processBlock(words, offset);","        },","","        _doFinalize: function () {","            // Shortcut","            var padding = this.cfg.padding;","","            // Finalize","            if (this._xformMode == this._ENC_XFORM_MODE) {","                // Pad data","                padding.pad(this._data, this.blockSize);","","                // Process final blocks","                var finalProcessedBlocks = this._process(!!'flush');","            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {","                // Process final blocks","                var finalProcessedBlocks = this._process(!!'flush');","","                // Unpad data","                padding.unpad(finalProcessedBlocks);","            }","","            return finalProcessedBlocks;","        },","","        blockSize: 128/32","    });","","    /**","     * A collection of cipher parameters.","     *","     * @property {WordArray} ciphertext The raw ciphertext.","     * @property {WordArray} key The key to this ciphertext.","     * @property {WordArray} iv The IV used in the ciphering operation.","     * @property {WordArray} salt The salt used with a key derivation function.","     * @property {Cipher} algorithm The cipher algorithm.","     * @property {Mode} mode The block mode used in the ciphering operation.","     * @property {Padding} padding The padding scheme used in the ciphering operation.","     * @property {number} blockSize The block size of the cipher.","     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.","     */","    var CipherParams = C_lib.CipherParams = Base.extend({","        /**","         * Initializes a newly created cipher params object.","         *","         * @param {Object} cipherParams An object with any of the possible cipher parameters.","         *","         * @example","         *","         *     var cipherParams = CryptoJS.lib.CipherParams.create({","         *         ciphertext: ciphertextWordArray,","         *         key: keyWordArray,","         *         iv: ivWordArray,","         *         salt: saltWordArray,","         *         algorithm: CryptoJS.algo.AES,","         *         mode: CryptoJS.mode.CBC,","         *         padding: CryptoJS.pad.PKCS7,","         *         blockSize: 4,","         *         formatter: CryptoJS.format.OpenSSL","         *     });","         */","        init: function (cipherParams) {","            this.mixIn(cipherParams);","        },","","        /**","         * Converts this cipher params object to a string.","         *","         * @param {Format} formatter (Optional) The formatting strategy to use.","         *","         * @return {string} The stringified cipher params.","         *","         * @throws Error If neither the formatter nor the default formatter is set.","         *","         * @example","         *","         *     var string = cipherParams + '';","         *     var string = cipherParams.toString();","         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);","         */","        toString: function (formatter) {","            return (formatter || this.formatter).stringify(this);","        }","    });","","    /**","     * Format namespace.","     */","    var C_format = C.format = {};","","    /**","     * OpenSSL formatting strategy.","     */","    var OpenSSLFormatter = C_format.OpenSSL = {","        /**","         * Converts a cipher params object to an OpenSSL-compatible string.","         *","         * @param {CipherParams} cipherParams The cipher params object.","         *","         * @return {string} The OpenSSL-compatible string.","         *","         * @static","         *","         * @example","         *","         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);","         */","        stringify: function (cipherParams) {","            // Shortcuts","            var ciphertext = cipherParams.ciphertext;","            var salt = cipherParams.salt;","","            // Format","            if (salt) {","                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);","            } else {","                var wordArray = ciphertext;","            }","","            return wordArray.toString(Base64);","        },","","        /**","         * Converts an OpenSSL-compatible string to a cipher params object.","         *","         * @param {string} openSSLStr The OpenSSL-compatible string.","         *","         * @return {CipherParams} The cipher params object.","         *","         * @static","         *","         * @example","         *","         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);","         */","        parse: function (openSSLStr) {","            // Parse base64","            var ciphertext = Base64.parse(openSSLStr);","","            // Shortcut","            var ciphertextWords = ciphertext.words;","","            // Test for salt","            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {","                // Extract salt","                var salt = WordArray.create(ciphertextWords.slice(2, 4));","","                // Remove salt from ciphertext","                ciphertextWords.splice(0, 4);","                ciphertext.sigBytes -= 16;","            }","","            return CipherParams.create({ ciphertext: ciphertext, salt: salt });","        }","    };","","    /**","     * A cipher wrapper that returns ciphertext as a serializable cipher params object.","     */","    var SerializableCipher = C_lib.SerializableCipher = Base.extend({","        /**","         * Configuration options.","         *","         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL","         */","        cfg: Base.extend({","            format: OpenSSLFormatter","        }),","","        /**","         * Encrypts a message.","         *","         * @param {Cipher} cipher The cipher algorithm to use.","         * @param {WordArray|string} message The message to encrypt.","         * @param {WordArray} key The key.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {CipherParams} A cipher params object.","         *","         * @static","         *","         * @example","         *","         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);","         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });","         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });","         */","        encrypt: function (cipher, message, key, cfg) {","            // Apply config defaults","            cfg = this.cfg.extend(cfg);","","            // Encrypt","            var encryptor = cipher.createEncryptor(key, cfg);","            var ciphertext = encryptor.finalize(message);","","            // Shortcut","            var cipherCfg = encryptor.cfg;","","            // Create and return serializable cipher params","            return CipherParams.create({","                ciphertext: ciphertext,","                key: key,","                iv: cipherCfg.iv,","                algorithm: cipher,","                mode: cipherCfg.mode,","                padding: cipherCfg.padding,","                blockSize: cipher.blockSize,","                formatter: cfg.format","            });","        },","","        /**","         * Decrypts serialized ciphertext.","         *","         * @param {Cipher} cipher The cipher algorithm to use.","         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.","         * @param {WordArray} key The key.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {WordArray} The plaintext.","         *","         * @static","         *","         * @example","         *","         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });","         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });","         */","        decrypt: function (cipher, ciphertext, key, cfg) {","            // Apply config defaults","            cfg = this.cfg.extend(cfg);","","            // Convert string to CipherParams","            ciphertext = this._parse(ciphertext, cfg.format);","","            // Decrypt","            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);","","            return plaintext;","        },","","        /**","         * Converts serialized ciphertext to CipherParams,","         * else assumed CipherParams already and returns ciphertext unchanged.","         *","         * @param {CipherParams|string} ciphertext The ciphertext.","         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.","         *","         * @return {CipherParams} The unserialized ciphertext.","         *","         * @static","         *","         * @example","         *","         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);","         */","        _parse: function (ciphertext, format) {","            if (typeof ciphertext == 'string') {","                return format.parse(ciphertext, this);","            } else {","                return ciphertext;","            }","        }","    });","","    /**","     * Key derivation function namespace.","     */","    var C_kdf = C.kdf = {};","","    /**","     * OpenSSL key derivation function.","     */","    var OpenSSLKdf = C_kdf.OpenSSL = {","        /**","         * Derives a key and IV from a password.","         *","         * @param {string} password The password to derive from.","         * @param {number} keySize The size in words of the key to generate.","         * @param {number} ivSize The size in words of the IV to generate.","         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.","         *","         * @return {CipherParams} A cipher params object with the key, IV, and salt.","         *","         * @static","         *","         * @example","         *","         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);","         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');","         */","        execute: function (password, keySize, ivSize, salt) {","            // Generate random salt","            if (!salt) {","                salt = WordArray.random(64/8);","            }","","            // Derive key and IV","            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);","","            // Separate key and IV","            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);","            key.sigBytes = keySize * 4;","","            // Return params","            return CipherParams.create({ key: key, iv: iv, salt: salt });","        }","    };","","    /**","     * A serializable cipher wrapper that derives the key from a password,","     * and returns ciphertext as a serializable cipher params object.","     */","    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({","        /**","         * Configuration options.","         *","         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL","         */","        cfg: SerializableCipher.cfg.extend({","            kdf: OpenSSLKdf","        }),","","        /**","         * Encrypts a message using a password.","         *","         * @param {Cipher} cipher The cipher algorithm to use.","         * @param {WordArray|string} message The message to encrypt.","         * @param {string} password The password.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {CipherParams} A cipher params object.","         *","         * @static","         *","         * @example","         *","         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');","         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });","         */","        encrypt: function (cipher, message, password, cfg) {","            // Apply config defaults","            cfg = this.cfg.extend(cfg);","","            // Derive key and other params","            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);","","            // Add IV to config","            cfg.iv = derivedParams.iv;","","            // Encrypt","            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);","","            // Mix in derived params","            ciphertext.mixIn(derivedParams);","","            return ciphertext;","        },","","        /**","         * Decrypts serialized ciphertext using a password.","         *","         * @param {Cipher} cipher The cipher algorithm to use.","         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.","         * @param {string} password The password.","         * @param {Object} cfg (Optional) The configuration options to use for this operation.","         *","         * @return {WordArray} The plaintext.","         *","         * @static","         *","         * @example","         *","         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });","         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });","         */","        decrypt: function (cipher, ciphertext, password, cfg) {","            // Apply config defaults","            cfg = this.cfg.extend(cfg);","","            // Convert string to CipherParams","            ciphertext = this._parse(ciphertext, cfg.format);","","            // Derive key and other params","            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);","","            // Add IV to config","            cfg.iv = derivedParams.iv;","","            // Decrypt","            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);","","            return plaintext;","        }","    });","}());",""],"l":{"1":1,"12":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"33":1,"56":0,"74":0,"90":0,"93":0,"94":0,"97":0,"109":0,"112":0,"129":0,"132":0,"151":0,"152":0,"156":0,"158":0,"183":1,"184":0,"185":0,"187":0,"191":1,"192":1,"194":0,"198":0,"210":1,"213":0,"215":0,"224":1,"229":1,"243":0,"259":0,"273":0,"274":0,"281":1,"285":1,"290":1,"303":0,"304":0,"307":0,"308":0,"311":0,"318":1,"331":0,"332":0,"335":0,"338":0,"339":0,"342":0,"346":1,"348":0,"351":0,"352":0,"355":0,"357":0,"361":0,"362":0,"366":1,"372":1,"377":1,"392":0,"395":0,"398":0,"401":0,"402":0,"403":0,"405":0,"408":0,"424":0,"427":0,"436":1,"450":0,"453":0,"454":0,"455":0,"458":0,"459":0,"461":0,"464":0,"466":0,"470":0,"475":0,"478":0,"480":0,"483":0,"486":0,"489":0,"492":0,"511":1,"532":0,"551":0,"558":1,"563":1,"579":0,"580":0,"583":0,"584":0,"586":0,"589":0,"607":0,"610":0,"613":0,"615":0,"618":0,"619":0,"622":0,"629":1,"659":0,"662":0,"663":0,"666":0,"669":0,"700":0,"703":0,"706":0,"708":0,"727":0,"728":0,"730":0,"738":1,"743":1,"763":0,"764":0,"768":0,"771":0,"772":0,"775":0,"783":1,"812":0,"815":0,"818":0,"821":0,"824":0,"826":0,"848":0,"851":0,"854":0,"857":0,"860":0,"862":0}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/aes.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/aes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":256,"21":128,"22":128,"23":1,"24":1,"25":1,"26":256,"27":256,"28":256,"29":256,"30":256,"31":256,"32":256,"33":256,"34":256,"35":256,"36":256,"37":256,"38":256,"39":256,"40":256,"41":256,"42":256,"43":256,"44":1,"45":255,"46":255,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1},"b":{"1":[128,128],"2":[1,255],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":13}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":5},"end":{"line":29,"column":17}}},"3":{"name":"(anonymous_3)","line":86,"loc":{"start":{"line":86,"column":18},"end":{"line":86,"column":30}}},"4":{"name":"(anonymous_4)","line":144,"loc":{"start":{"line":144,"column":22},"end":{"line":144,"column":43}}},"5":{"name":"(anonymous_5)","line":148,"loc":{"start":{"line":148,"column":22},"end":{"line":148,"column":43}}},"6":{"name":"(anonymous_6)","line":162,"loc":{"start":{"line":162,"column":23},"end":{"line":162,"column":107}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":215,"column":5}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":40}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":18}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":27}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":27}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":27}},"17":{"start":{"line":29,"column":4},"end":{"line":77,"column":9}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":19}},"19":{"start":{"line":32,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":33,"column":12},"end":{"line":37,"column":13}},"21":{"start":{"line":34,"column":16},"end":{"line":34,"column":30}},"22":{"start":{"line":36,"column":16},"end":{"line":36,"column":40}},"23":{"start":{"line":41,"column":8},"end":{"line":41,"column":18}},"24":{"start":{"line":42,"column":8},"end":{"line":42,"column":19}},"25":{"start":{"line":43,"column":8},"end":{"line":76,"column":9}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":72}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":49}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":25}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":29}},"30":{"start":{"line":51,"column":12},"end":{"line":51,"column":26}},"31":{"start":{"line":52,"column":12},"end":{"line":52,"column":27}},"32":{"start":{"line":53,"column":12},"end":{"line":53,"column":27}},"33":{"start":{"line":56,"column":12},"end":{"line":56,"column":55}},"34":{"start":{"line":57,"column":12},"end":{"line":57,"column":49}},"35":{"start":{"line":58,"column":12},"end":{"line":58,"column":50}},"36":{"start":{"line":59,"column":12},"end":{"line":59,"column":50}},"37":{"start":{"line":60,"column":12},"end":{"line":60,"column":29}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":87}},"39":{"start":{"line":64,"column":12},"end":{"line":64,"column":54}},"40":{"start":{"line":65,"column":12},"end":{"line":65,"column":55}},"41":{"start":{"line":66,"column":12},"end":{"line":66,"column":55}},"42":{"start":{"line":67,"column":12},"end":{"line":67,"column":34}},"43":{"start":{"line":70,"column":12},"end":{"line":75,"column":13}},"44":{"start":{"line":71,"column":16},"end":{"line":71,"column":27}},"45":{"start":{"line":73,"column":16},"end":{"line":73,"column":42}},"46":{"start":{"line":74,"column":16},"end":{"line":74,"column":31}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":82}},"48":{"start":{"line":85,"column":4},"end":{"line":204,"column":7}},"49":{"start":{"line":88,"column":12},"end":{"line":88,"column":32}},"50":{"start":{"line":89,"column":12},"end":{"line":89,"column":37}},"51":{"start":{"line":90,"column":12},"end":{"line":90,"column":43}},"52":{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},"53":{"start":{"line":96,"column":12},"end":{"line":96,"column":43}},"54":{"start":{"line":99,"column":12},"end":{"line":99,"column":53}},"55":{"start":{"line":100,"column":12},"end":{"line":122,"column":13}},"56":{"start":{"line":101,"column":16},"end":{"line":121,"column":17}},"57":{"start":{"line":102,"column":20},"end":{"line":102,"column":57}},"58":{"start":{"line":104,"column":20},"end":{"line":104,"column":51}},"59":{"start":{"line":106,"column":20},"end":{"line":118,"column":21}},"60":{"start":{"line":108,"column":24},"end":{"line":108,"column":50}},"61":{"start":{"line":111,"column":24},"end":{"line":111,"column":134}},"62":{"start":{"line":114,"column":24},"end":{"line":114,"column":63}},"63":{"start":{"line":115,"column":27},"end":{"line":118,"column":21}},"64":{"start":{"line":117,"column":24},"end":{"line":117,"column":134}},"65":{"start":{"line":120,"column":20},"end":{"line":120,"column":74}},"66":{"start":{"line":125,"column":12},"end":{"line":125,"column":59}},"67":{"start":{"line":126,"column":12},"end":{"line":141,"column":13}},"68":{"start":{"line":127,"column":16},"end":{"line":127,"column":46}},"69":{"start":{"line":129,"column":16},"end":{"line":133,"column":17}},"70":{"start":{"line":130,"column":20},"end":{"line":130,"column":47}},"71":{"start":{"line":132,"column":20},"end":{"line":132,"column":51}},"72":{"start":{"line":135,"column":16},"end":{"line":140,"column":17}},"73":{"start":{"line":136,"column":20},"end":{"line":136,"column":49}},"74":{"start":{"line":138,"column":20},"end":{"line":139,"column":117}},"75":{"start":{"line":145,"column":12},"end":{"line":145,"column":111}},"76":{"start":{"line":150,"column":12},"end":{"line":150,"column":34}},"77":{"start":{"line":151,"column":12},"end":{"line":151,"column":42}},"78":{"start":{"line":152,"column":12},"end":{"line":152,"column":30}},"79":{"start":{"line":154,"column":12},"end":{"line":154,"column":134}},"80":{"start":{"line":157,"column":12},"end":{"line":157,"column":34}},"81":{"start":{"line":158,"column":12},"end":{"line":158,"column":42}},"82":{"start":{"line":159,"column":12},"end":{"line":159,"column":30}},"83":{"start":{"line":164,"column":12},"end":{"line":164,"column":40}},"84":{"start":{"line":167,"column":12},"end":{"line":167,"column":52}},"85":{"start":{"line":168,"column":12},"end":{"line":168,"column":52}},"86":{"start":{"line":169,"column":12},"end":{"line":169,"column":52}},"87":{"start":{"line":170,"column":12},"end":{"line":170,"column":52}},"88":{"start":{"line":173,"column":12},"end":{"line":173,"column":26}},"89":{"start":{"line":176,"column":12},"end":{"line":188,"column":13}},"90":{"start":{"line":178,"column":16},"end":{"line":178,"column":155}},"91":{"start":{"line":179,"column":16},"end":{"line":179,"column":155}},"92":{"start":{"line":180,"column":16},"end":{"line":180,"column":155}},"93":{"start":{"line":181,"column":16},"end":{"line":181,"column":155}},"94":{"start":{"line":184,"column":16},"end":{"line":184,"column":24}},"95":{"start":{"line":185,"column":16},"end":{"line":185,"column":24}},"96":{"start":{"line":186,"column":16},"end":{"line":186,"column":24}},"97":{"start":{"line":187,"column":16},"end":{"line":187,"column":24}},"98":{"start":{"line":191,"column":12},"end":{"line":191,"column":156}},"99":{"start":{"line":192,"column":12},"end":{"line":192,"column":156}},"100":{"start":{"line":193,"column":12},"end":{"line":193,"column":156}},"101":{"start":{"line":194,"column":12},"end":{"line":194,"column":156}},"102":{"start":{"line":197,"column":12},"end":{"line":197,"column":31}},"103":{"start":{"line":198,"column":12},"end":{"line":198,"column":31}},"104":{"start":{"line":199,"column":12},"end":{"line":199,"column":31}},"105":{"start":{"line":200,"column":12},"end":{"line":200,"column":31}},"106":{"start":{"line":214,"column":4},"end":{"line":214,"column":43}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":16},"end":{"line":101,"column":16}},{"start":{"line":101,"column":16},"end":{"line":101,"column":16}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":20},"end":{"line":106,"column":20}},{"start":{"line":106,"column":20},"end":{"line":106,"column":20}}]},"5":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":27},"end":{"line":115,"column":27}},{"start":{"line":115,"column":27},"end":{"line":115,"column":27}}]},"6":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":31},"end":{"line":115,"column":42}},{"start":{"line":115,"column":46},"end":{"line":115,"column":66}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16}},{"start":{"line":129,"column":16},"end":{"line":129,"column":16}}]},"8":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":16},"end":{"line":135,"column":16}},{"start":{"line":135,"column":16},"end":{"line":135,"column":16}}]},"9":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":20},"end":{"line":135,"column":32}},{"start":{"line":135,"column":36},"end":{"line":135,"column":46}}]}},"code":["var CryptoJS = require('./core').CryptoJS;","","/*","CryptoJS v3.1.2","code.google.com/p/crypto-js","(c) 2009-2013 by Jeff Mott. All rights reserved.","code.google.com/p/crypto-js/wiki/License","*/","(function () {","    // Shortcuts","    var C = CryptoJS;","    var C_lib = C.lib;","    var BlockCipher = C_lib.BlockCipher;","    var C_algo = C.algo;","","    // Lookup tables","    var SBOX = [];","    var INV_SBOX = [];","    var SUB_MIX_0 = [];","    var SUB_MIX_1 = [];","    var SUB_MIX_2 = [];","    var SUB_MIX_3 = [];","    var INV_SUB_MIX_0 = [];","    var INV_SUB_MIX_1 = [];","    var INV_SUB_MIX_2 = [];","    var INV_SUB_MIX_3 = [];","","    // Compute lookup tables","    (function () {","        // Compute double table","        var d = [];","        for (var i = 0; i < 256; i++) {","            if (i < 128) {","                d[i] = i << 1;","            } else {","                d[i] = (i << 1) ^ 0x11b;","            }","        }","","        // Walk GF(2^8)","        var x = 0;","        var xi = 0;","        for (var i = 0; i < 256; i++) {","            // Compute sbox","            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);","            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;","            SBOX[x] = sx;","            INV_SBOX[sx] = x;","","            // Compute multiplication","            var x2 = d[x];","            var x4 = d[x2];","            var x8 = d[x4];","","            // Compute sub bytes, mix columns tables","            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);","            SUB_MIX_0[x] = (t << 24) | (t >>> 8);","            SUB_MIX_1[x] = (t << 16) | (t >>> 16);","            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);","            SUB_MIX_3[x] = t;","","            // Compute inv sub bytes, inv mix columns tables","            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);","            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);","            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);","            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);","            INV_SUB_MIX_3[sx] = t;","","            // Compute next counter","            if (!x) {","                x = xi = 1;","            } else {","                x = x2 ^ d[d[d[x8 ^ x2]]];","                xi ^= d[d[xi]];","            }","        }","    }());","","    // Precomputed Rcon lookup","    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];","","    /**","     * AES block cipher algorithm.","     */","    var AES = C_algo.AES = BlockCipher.extend({","        _doReset: function () {","            // Shortcuts","            var key = this._key;","            var keyWords = key.words;","            var keySize = key.sigBytes / 4;","","            // Compute number of rounds","            var nRounds = this._nRounds = keySize + 6","","            // Compute number of key schedule rows","            var ksRows = (nRounds + 1) * 4;","","            // Compute key schedule","            var keySchedule = this._keySchedule = [];","            for (var ksRow = 0; ksRow < ksRows; ksRow++) {","                if (ksRow < keySize) {","                    keySchedule[ksRow] = keyWords[ksRow];","                } else {","                    var t = keySchedule[ksRow - 1];","","                    if (!(ksRow % keySize)) {","                        // Rot word","                        t = (t << 8) | (t >>> 24);","","                        // Sub word","                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];","","                        // Mix Rcon","                        t ^= RCON[(ksRow / keySize) | 0] << 24;","                    } else if (keySize > 6 && ksRow % keySize == 4) {","                        // Sub word","                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];","                    }","","                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;","                }","            }","","            // Compute inv key schedule","            var invKeySchedule = this._invKeySchedule = [];","            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {","                var ksRow = ksRows - invKsRow;","","                if (invKsRow % 4) {","                    var t = keySchedule[ksRow];","                } else {","                    var t = keySchedule[ksRow - 4];","                }","","                if (invKsRow < 4 || ksRow <= 4) {","                    invKeySchedule[invKsRow] = t;","                } else {","                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^","                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];","                }","            }","        },","","        encryptBlock: function (M, offset) {","            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);","        },","","        decryptBlock: function (M, offset) {","            // Swap 2nd and 4th rows","            var t = M[offset + 1];","            M[offset + 1] = M[offset + 3];","            M[offset + 3] = t;","","            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);","","            // Inv swap 2nd and 4th rows","            var t = M[offset + 1];","            M[offset + 1] = M[offset + 3];","            M[offset + 3] = t;","        },","","        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {","            // Shortcut","            var nRounds = this._nRounds;","","            // Get input, add round key","            var s0 = M[offset]     ^ keySchedule[0];","            var s1 = M[offset + 1] ^ keySchedule[1];","            var s2 = M[offset + 2] ^ keySchedule[2];","            var s3 = M[offset + 3] ^ keySchedule[3];","","            // Key schedule row counter","            var ksRow = 4;","","            // Rounds","            for (var round = 1; round < nRounds; round++) {","                // Shift rows, sub bytes, mix columns, add round key","                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];","                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];","                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];","                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];","","                // Update state","                s0 = t0;","                s1 = t1;","                s2 = t2;","                s3 = t3;","            }","","            // Shift rows, sub bytes, add round key","            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];","            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];","            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];","            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];","","            // Set output","            M[offset]     = t0;","            M[offset + 1] = t1;","            M[offset + 2] = t2;","            M[offset + 3] = t3;","        },","","        keySize: 256/32","    });","","    /**","     * Shortcut functions to the cipher's object interface.","     *","     * @example","     *","     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);","     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);","     */","    C.AES = BlockCipher._createHelper(AES);","}());",""],"l":{"1":1,"9":1,"11":1,"12":1,"13":1,"14":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"29":1,"31":1,"32":1,"33":256,"34":128,"36":128,"41":1,"42":1,"43":1,"45":256,"46":256,"47":256,"48":256,"51":256,"52":256,"53":256,"56":256,"57":256,"58":256,"59":256,"60":256,"63":256,"64":256,"65":256,"66":256,"67":256,"70":256,"71":1,"73":255,"74":255,"80":1,"85":1,"88":0,"89":0,"90":0,"93":0,"96":0,"99":0,"100":0,"101":0,"102":0,"104":0,"106":0,"108":0,"111":0,"114":0,"115":0,"117":0,"120":0,"125":0,"126":0,"127":0,"129":0,"130":0,"132":0,"135":0,"136":0,"138":0,"145":0,"150":0,"151":0,"152":0,"154":0,"157":0,"158":0,"159":0,"164":0,"167":0,"168":0,"169":0,"170":0,"173":0,"176":0,"178":0,"179":0,"180":0,"181":0,"184":0,"185":0,"186":0,"187":0,"191":0,"192":0,"193":0,"194":0,"197":0,"198":0,"199":0,"200":0,"214":1}},"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/jsonformatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-cryptojs-aes/node_modules/node-cryptojs-aes/lib/jsonformatter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":12},"end":{"line":5,"column":36}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":44,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":9,"column":4}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"5":{"start":{"line":13,"column":3},"end":{"line":13,"column":43}},"6":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"7":{"start":{"line":17,"column":3},"end":{"line":17,"column":44}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":32}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}},"10":{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},"11":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":35,"column":3},"end":{"line":35,"column":56}},"13":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"14":{"start":{"line":39,"column":3},"end":{"line":39,"column":57}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":22}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]}},"code":["var CryptoJS = require('./core').CryptoJS;","","// create custom json serialization format","var JsonFormatter = {","\tstringify: function (cipherParams) {","\t\t// create json object with ciphertext","\t\tvar jsonObj = {","\t\t\tct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64)","\t\t};","\t\t","\t\t// optionally add iv and salt","\t\tif (cipherParams.iv) {","\t\t\tjsonObj.iv = cipherParams.iv.toString();","\t\t}","\t\t","\t\tif (cipherParams.salt) {","\t\t\tjsonObj.s = cipherParams.salt.toString();","\t\t}","","\t\t// stringify json object","\t\treturn JSON.stringify(jsonObj)","\t},","","\tparse: function (jsonStr) {","\t\t// parse json string","\t\tvar jsonObj = JSON.parse(jsonStr);","\t\t","\t\t// extract ciphertext from json object, and create cipher params object","\t\tvar cipherParams = CryptoJS.lib.CipherParams.create({","\t\t\tciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct)","\t\t});","\t\t","\t\t// optionally extract iv and salt","\t\tif (jsonObj.iv) {","\t\t\tcipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv);","\t\t}","            ","\t\tif (jsonObj.s) {","\t\t\tcipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s);","\t\t}","\t\t","\t\treturn cipherParams;","\t}","};","","exports.JsonFormatter = JsonFormatter;"],"l":{"1":1,"4":1,"7":0,"12":0,"13":0,"16":0,"17":0,"21":0,"26":0,"29":0,"34":0,"35":0,"38":0,"39":0,"42":0,"46":1}}}